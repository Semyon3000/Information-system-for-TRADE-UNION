//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Курсовая_работа {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private АДРЕСА_ДОКУМЕНТОВDataTable tableАДРЕСА_ДОКУМЕНТОВ;
        
        private ДОКУМЕНТЫDataTable tableДОКУМЕНТЫ;
        
        private КАТЕГОРИИDataTable tableКАТЕГОРИИ;
        
        private МАТПОМОЩЬDataTable tableМАТПОМОЩЬ;
        
        private ПАСПОРТАDataTable tableПАСПОРТА;
        
        private ПОЛЬЗОВАТЕЛЬDataTable tableПОЛЬЗОВАТЕЛЬ;
        
        private ПРОФ_БИЛЕТЫDataTable tableПРОФ_БИЛЕТЫ;
        
        private РЕКВИЗИТЫ_БАНКАDataTable tableРЕКВИЗИТЫ_БАНКА;
        
        private ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ;
        
        private global::System.Data.DataRelation relationSYS_C0018512;
        
        private global::System.Data.DataRelation relationSYS_C0018513;
        
        private global::System.Data.DataRelation relationSYS_C0018508;
        
        private global::System.Data.DataRelation relationSYS_C0018509;
        
        private global::System.Data.DataRelation relationSYS_C0018502;
        
        private global::System.Data.DataRelation relationSYS_C0018503;
        
        private global::System.Data.DataRelation relationSYS_C0018504;
        
        private global::System.Data.DataRelation relationSYS_C0018505;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["АДРЕСА_ДОКУМЕНТОВ"] != null)) {
                    base.Tables.Add(new АДРЕСА_ДОКУМЕНТОВDataTable(ds.Tables["АДРЕСА_ДОКУМЕНТОВ"]));
                }
                if ((ds.Tables["ДОКУМЕНТЫ"] != null)) {
                    base.Tables.Add(new ДОКУМЕНТЫDataTable(ds.Tables["ДОКУМЕНТЫ"]));
                }
                if ((ds.Tables["КАТЕГОРИИ"] != null)) {
                    base.Tables.Add(new КАТЕГОРИИDataTable(ds.Tables["КАТЕГОРИИ"]));
                }
                if ((ds.Tables["МАТПОМОЩЬ"] != null)) {
                    base.Tables.Add(new МАТПОМОЩЬDataTable(ds.Tables["МАТПОМОЩЬ"]));
                }
                if ((ds.Tables["ПАСПОРТА"] != null)) {
                    base.Tables.Add(new ПАСПОРТАDataTable(ds.Tables["ПАСПОРТА"]));
                }
                if ((ds.Tables["ПОЛЬЗОВАТЕЛЬ"] != null)) {
                    base.Tables.Add(new ПОЛЬЗОВАТЕЛЬDataTable(ds.Tables["ПОЛЬЗОВАТЕЛЬ"]));
                }
                if ((ds.Tables["ПРОФ_БИЛЕТЫ"] != null)) {
                    base.Tables.Add(new ПРОФ_БИЛЕТЫDataTable(ds.Tables["ПРОФ_БИЛЕТЫ"]));
                }
                if ((ds.Tables["РЕКВИЗИТЫ_БАНКА"] != null)) {
                    base.Tables.Add(new РЕКВИЗИТЫ_БАНКАDataTable(ds.Tables["РЕКВИЗИТЫ_БАНКА"]));
                }
                if ((ds.Tables["ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"] != null)) {
                    base.Tables.Add(new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable(ds.Tables["ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public АДРЕСА_ДОКУМЕНТОВDataTable АДРЕСА_ДОКУМЕНТОВ {
            get {
                return this.tableАДРЕСА_ДОКУМЕНТОВ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ДОКУМЕНТЫDataTable ДОКУМЕНТЫ {
            get {
                return this.tableДОКУМЕНТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public КАТЕГОРИИDataTable КАТЕГОРИИ {
            get {
                return this.tableКАТЕГОРИИ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public МАТПОМОЩЬDataTable МАТПОМОЩЬ {
            get {
                return this.tableМАТПОМОЩЬ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПАСПОРТАDataTable ПАСПОРТА {
            get {
                return this.tableПАСПОРТА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПОЛЬЗОВАТЕЛЬDataTable ПОЛЬЗОВАТЕЛЬ {
            get {
                return this.tableПОЛЬЗОВАТЕЛЬ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ПРОФ_БИЛЕТЫDataTable ПРОФ_БИЛЕТЫ {
            get {
                return this.tableПРОФ_БИЛЕТЫ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public РЕКВИЗИТЫ_БАНКАDataTable РЕКВИЗИТЫ_БАНКА {
            get {
                return this.tableРЕКВИЗИТЫ_БАНКА;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ {
            get {
                return this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["АДРЕСА_ДОКУМЕНТОВ"] != null)) {
                    base.Tables.Add(new АДРЕСА_ДОКУМЕНТОВDataTable(ds.Tables["АДРЕСА_ДОКУМЕНТОВ"]));
                }
                if ((ds.Tables["ДОКУМЕНТЫ"] != null)) {
                    base.Tables.Add(new ДОКУМЕНТЫDataTable(ds.Tables["ДОКУМЕНТЫ"]));
                }
                if ((ds.Tables["КАТЕГОРИИ"] != null)) {
                    base.Tables.Add(new КАТЕГОРИИDataTable(ds.Tables["КАТЕГОРИИ"]));
                }
                if ((ds.Tables["МАТПОМОЩЬ"] != null)) {
                    base.Tables.Add(new МАТПОМОЩЬDataTable(ds.Tables["МАТПОМОЩЬ"]));
                }
                if ((ds.Tables["ПАСПОРТА"] != null)) {
                    base.Tables.Add(new ПАСПОРТАDataTable(ds.Tables["ПАСПОРТА"]));
                }
                if ((ds.Tables["ПОЛЬЗОВАТЕЛЬ"] != null)) {
                    base.Tables.Add(new ПОЛЬЗОВАТЕЛЬDataTable(ds.Tables["ПОЛЬЗОВАТЕЛЬ"]));
                }
                if ((ds.Tables["ПРОФ_БИЛЕТЫ"] != null)) {
                    base.Tables.Add(new ПРОФ_БИЛЕТЫDataTable(ds.Tables["ПРОФ_БИЛЕТЫ"]));
                }
                if ((ds.Tables["РЕКВИЗИТЫ_БАНКА"] != null)) {
                    base.Tables.Add(new РЕКВИЗИТЫ_БАНКАDataTable(ds.Tables["РЕКВИЗИТЫ_БАНКА"]));
                }
                if ((ds.Tables["ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"] != null)) {
                    base.Tables.Add(new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable(ds.Tables["ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableАДРЕСА_ДОКУМЕНТОВ = ((АДРЕСА_ДОКУМЕНТОВDataTable)(base.Tables["АДРЕСА_ДОКУМЕНТОВ"]));
            if ((initTable == true)) {
                if ((this.tableАДРЕСА_ДОКУМЕНТОВ != null)) {
                    this.tableАДРЕСА_ДОКУМЕНТОВ.InitVars();
                }
            }
            this.tableДОКУМЕНТЫ = ((ДОКУМЕНТЫDataTable)(base.Tables["ДОКУМЕНТЫ"]));
            if ((initTable == true)) {
                if ((this.tableДОКУМЕНТЫ != null)) {
                    this.tableДОКУМЕНТЫ.InitVars();
                }
            }
            this.tableКАТЕГОРИИ = ((КАТЕГОРИИDataTable)(base.Tables["КАТЕГОРИИ"]));
            if ((initTable == true)) {
                if ((this.tableКАТЕГОРИИ != null)) {
                    this.tableКАТЕГОРИИ.InitVars();
                }
            }
            this.tableМАТПОМОЩЬ = ((МАТПОМОЩЬDataTable)(base.Tables["МАТПОМОЩЬ"]));
            if ((initTable == true)) {
                if ((this.tableМАТПОМОЩЬ != null)) {
                    this.tableМАТПОМОЩЬ.InitVars();
                }
            }
            this.tableПАСПОРТА = ((ПАСПОРТАDataTable)(base.Tables["ПАСПОРТА"]));
            if ((initTable == true)) {
                if ((this.tableПАСПОРТА != null)) {
                    this.tableПАСПОРТА.InitVars();
                }
            }
            this.tableПОЛЬЗОВАТЕЛЬ = ((ПОЛЬЗОВАТЕЛЬDataTable)(base.Tables["ПОЛЬЗОВАТЕЛЬ"]));
            if ((initTable == true)) {
                if ((this.tableПОЛЬЗОВАТЕЛЬ != null)) {
                    this.tableПОЛЬЗОВАТЕЛЬ.InitVars();
                }
            }
            this.tableПРОФ_БИЛЕТЫ = ((ПРОФ_БИЛЕТЫDataTable)(base.Tables["ПРОФ_БИЛЕТЫ"]));
            if ((initTable == true)) {
                if ((this.tableПРОФ_БИЛЕТЫ != null)) {
                    this.tableПРОФ_БИЛЕТЫ.InitVars();
                }
            }
            this.tableРЕКВИЗИТЫ_БАНКА = ((РЕКВИЗИТЫ_БАНКАDataTable)(base.Tables["РЕКВИЗИТЫ_БАНКА"]));
            if ((initTable == true)) {
                if ((this.tableРЕКВИЗИТЫ_БАНКА != null)) {
                    this.tableРЕКВИЗИТЫ_БАНКА.InitVars();
                }
            }
            this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ = ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable)(base.Tables["ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"]));
            if ((initTable == true)) {
                if ((this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ != null)) {
                    this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.InitVars();
                }
            }
            this.relationSYS_C0018512 = this.Relations["SYS_C0018512"];
            this.relationSYS_C0018513 = this.Relations["SYS_C0018513"];
            this.relationSYS_C0018508 = this.Relations["SYS_C0018508"];
            this.relationSYS_C0018509 = this.Relations["SYS_C0018509"];
            this.relationSYS_C0018502 = this.Relations["SYS_C0018502"];
            this.relationSYS_C0018503 = this.Relations["SYS_C0018503"];
            this.relationSYS_C0018504 = this.Relations["SYS_C0018504"];
            this.relationSYS_C0018505 = this.Relations["SYS_C0018505"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableАДРЕСА_ДОКУМЕНТОВ = new АДРЕСА_ДОКУМЕНТОВDataTable();
            base.Tables.Add(this.tableАДРЕСА_ДОКУМЕНТОВ);
            this.tableДОКУМЕНТЫ = new ДОКУМЕНТЫDataTable();
            base.Tables.Add(this.tableДОКУМЕНТЫ);
            this.tableКАТЕГОРИИ = new КАТЕГОРИИDataTable();
            base.Tables.Add(this.tableКАТЕГОРИИ);
            this.tableМАТПОМОЩЬ = new МАТПОМОЩЬDataTable();
            base.Tables.Add(this.tableМАТПОМОЩЬ);
            this.tableПАСПОРТА = new ПАСПОРТАDataTable();
            base.Tables.Add(this.tableПАСПОРТА);
            this.tableПОЛЬЗОВАТЕЛЬ = new ПОЛЬЗОВАТЕЛЬDataTable();
            base.Tables.Add(this.tableПОЛЬЗОВАТЕЛЬ);
            this.tableПРОФ_БИЛЕТЫ = new ПРОФ_БИЛЕТЫDataTable();
            base.Tables.Add(this.tableПРОФ_БИЛЕТЫ);
            this.tableРЕКВИЗИТЫ_БАНКА = new РЕКВИЗИТЫ_БАНКАDataTable();
            base.Tables.Add(this.tableРЕКВИЗИТЫ_БАНКА);
            this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ = new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable();
            base.Tables.Add(this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ);
            this.relationSYS_C0018512 = new global::System.Data.DataRelation("SYS_C0018512", new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_ПОЛЬЗОВАТЕЛЯColumn}, new global::System.Data.DataColumn[] {
                        this.tableДОКУМЕНТЫ.ID_ПОЛЬЗОВАТЕЛЯColumn}, false);
            this.Relations.Add(this.relationSYS_C0018512);
            this.relationSYS_C0018513 = new global::System.Data.DataRelation("SYS_C0018513", new global::System.Data.DataColumn[] {
                        this.tableАДРЕСА_ДОКУМЕНТОВ.ID_АДРЕСАColumn}, new global::System.Data.DataColumn[] {
                        this.tableДОКУМЕНТЫ.ID_АДРЕСАColumn}, false);
            this.Relations.Add(this.relationSYS_C0018513);
            this.relationSYS_C0018508 = new global::System.Data.DataRelation("SYS_C0018508", new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_ПОЛЬЗОВАТЕЛЯColumn}, new global::System.Data.DataColumn[] {
                        this.tableМАТПОМОЩЬ.ID_ПОЛЬЗОВАТЕЛЯColumn}, false);
            this.Relations.Add(this.relationSYS_C0018508);
            this.relationSYS_C0018509 = new global::System.Data.DataRelation("SYS_C0018509", new global::System.Data.DataColumn[] {
                        this.tableКАТЕГОРИИ.ID_КАТЕГОРИИColumn}, new global::System.Data.DataColumn[] {
                        this.tableМАТПОМОЩЬ.ID_КАТЕГОРИИColumn}, false);
            this.Relations.Add(this.relationSYS_C0018509);
            this.relationSYS_C0018502 = new global::System.Data.DataRelation("SYS_C0018502", new global::System.Data.DataColumn[] {
                        this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.ID_ТИПА_ПОЛЬЗColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_ТИПА_ПОЛЬЗColumn}, false);
            this.Relations.Add(this.relationSYS_C0018502);
            this.relationSYS_C0018503 = new global::System.Data.DataRelation("SYS_C0018503", new global::System.Data.DataColumn[] {
                        this.tableПАСПОРТА.ID_ПАСПОРТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_ПАСПОРТАColumn}, false);
            this.Relations.Add(this.relationSYS_C0018503);
            this.relationSYS_C0018504 = new global::System.Data.DataRelation("SYS_C0018504", new global::System.Data.DataColumn[] {
                        this.tableРЕКВИЗИТЫ_БАНКА.ID_РЕКВИЗ_БАНКАColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_РЕКВИЗ_БАНКАColumn}, false);
            this.Relations.Add(this.relationSYS_C0018504);
            this.relationSYS_C0018505 = new global::System.Data.DataRelation("SYS_C0018505", new global::System.Data.DataColumn[] {
                        this.tableПРОФ_БИЛЕТЫ.ID_ПРОФ_БИЛЕТАColumn}, new global::System.Data.DataColumn[] {
                        this.tableПОЛЬЗОВАТЕЛЬ.ID_ПРОФ_БИЛЕТАColumn}, false);
            this.Relations.Add(this.relationSYS_C0018505);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeАДРЕСА_ДОКУМЕНТОВ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeДОКУМЕНТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeКАТЕГОРИИ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeМАТПОМОЩЬ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПАСПОРТА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПОЛЬЗОВАТЕЛЬ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeПРОФ_БИЛЕТЫ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeРЕКВИЗИТЫ_БАНКА() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private bool ShouldSerializeТИПЫ_ПОЛЬЗОВАТЕЛЕЙ() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void АДРЕСА_ДОКУМЕНТОВRowChangeEventHandler(object sender, АДРЕСА_ДОКУМЕНТОВRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ДОКУМЕНТЫRowChangeEventHandler(object sender, ДОКУМЕНТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void КАТЕГОРИИRowChangeEventHandler(object sender, КАТЕГОРИИRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void МАТПОМОЩЬRowChangeEventHandler(object sender, МАТПОМОЩЬRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПАСПОРТАRowChangeEventHandler(object sender, ПАСПОРТАRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПОЛЬЗОВАТЕЛЬRowChangeEventHandler(object sender, ПОЛЬЗОВАТЕЛЬRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ПРОФ_БИЛЕТЫRowChangeEventHandler(object sender, ПРОФ_БИЛЕТЫRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void РЕКВИЗИТЫ_БАНКАRowChangeEventHandler(object sender, РЕКВИЗИТЫ_БАНКАRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public delegate void ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEventHandler(object sender, ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class АДРЕСА_ДОКУМЕНТОВDataTable : global::System.Data.TypedTableBase<АДРЕСА_ДОКУМЕНТОВRow> {
            
            private global::System.Data.DataColumn columnID_АДРЕСА;
            
            private global::System.Data.DataColumn columnНАИМ_ПАПКИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВDataTable() {
                this.TableName = "АДРЕСА_ДОКУМЕНТОВ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal АДРЕСА_ДОКУМЕНТОВDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected АДРЕСА_ДОКУМЕНТОВDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_АДРЕСАColumn {
                get {
                    return this.columnID_АДРЕСА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_ПАПКИColumn {
                get {
                    return this.columnНАИМ_ПАПКИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow this[int index] {
                get {
                    return ((АДРЕСА_ДОКУМЕНТОВRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АДРЕСА_ДОКУМЕНТОВRowChangeEventHandler АДРЕСА_ДОКУМЕНТОВRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АДРЕСА_ДОКУМЕНТОВRowChangeEventHandler АДРЕСА_ДОКУМЕНТОВRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АДРЕСА_ДОКУМЕНТОВRowChangeEventHandler АДРЕСА_ДОКУМЕНТОВRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event АДРЕСА_ДОКУМЕНТОВRowChangeEventHandler АДРЕСА_ДОКУМЕНТОВRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddАДРЕСА_ДОКУМЕНТОВRow(АДРЕСА_ДОКУМЕНТОВRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow AddАДРЕСА_ДОКУМЕНТОВRow(decimal ID_АДРЕСА, string НАИМ_ПАПКИ) {
                АДРЕСА_ДОКУМЕНТОВRow rowАДРЕСА_ДОКУМЕНТОВRow = ((АДРЕСА_ДОКУМЕНТОВRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_АДРЕСА,
                        НАИМ_ПАПКИ};
                rowАДРЕСА_ДОКУМЕНТОВRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowАДРЕСА_ДОКУМЕНТОВRow);
                return rowАДРЕСА_ДОКУМЕНТОВRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow FindByID_АДРЕСА(decimal ID_АДРЕСА) {
                return ((АДРЕСА_ДОКУМЕНТОВRow)(this.Rows.Find(new object[] {
                            ID_АДРЕСА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                АДРЕСА_ДОКУМЕНТОВDataTable cln = ((АДРЕСА_ДОКУМЕНТОВDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new АДРЕСА_ДОКУМЕНТОВDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_АДРЕСА = base.Columns["ID_АДРЕСА"];
                this.columnНАИМ_ПАПКИ = base.Columns["НАИМ_ПАПКИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_АДРЕСА = new global::System.Data.DataColumn("ID_АДРЕСА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_АДРЕСА);
                this.columnНАИМ_ПАПКИ = new global::System.Data.DataColumn("НАИМ_ПАПКИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_ПАПКИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_АДРЕСА}, true));
                this.columnID_АДРЕСА.AllowDBNull = false;
                this.columnID_АДРЕСА.Unique = true;
                this.columnНАИМ_ПАПКИ.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow NewАДРЕСА_ДОКУМЕНТОВRow() {
                return ((АДРЕСА_ДОКУМЕНТОВRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new АДРЕСА_ДОКУМЕНТОВRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(АДРЕСА_ДОКУМЕНТОВRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.АДРЕСА_ДОКУМЕНТОВRowChanged != null)) {
                    this.АДРЕСА_ДОКУМЕНТОВRowChanged(this, new АДРЕСА_ДОКУМЕНТОВRowChangeEvent(((АДРЕСА_ДОКУМЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.АДРЕСА_ДОКУМЕНТОВRowChanging != null)) {
                    this.АДРЕСА_ДОКУМЕНТОВRowChanging(this, new АДРЕСА_ДОКУМЕНТОВRowChangeEvent(((АДРЕСА_ДОКУМЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.АДРЕСА_ДОКУМЕНТОВRowDeleted != null)) {
                    this.АДРЕСА_ДОКУМЕНТОВRowDeleted(this, new АДРЕСА_ДОКУМЕНТОВRowChangeEvent(((АДРЕСА_ДОКУМЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.АДРЕСА_ДОКУМЕНТОВRowDeleting != null)) {
                    this.АДРЕСА_ДОКУМЕНТОВRowDeleting(this, new АДРЕСА_ДОКУМЕНТОВRowChangeEvent(((АДРЕСА_ДОКУМЕНТОВRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveАДРЕСА_ДОКУМЕНТОВRow(АДРЕСА_ДОКУМЕНТОВRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "АДРЕСА_ДОКУМЕНТОВDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ДОКУМЕНТЫDataTable : global::System.Data.TypedTableBase<ДОКУМЕНТЫRow> {
            
            private global::System.Data.DataColumn columnНАИМ_ДОКУМЕНТА;
            
            private global::System.Data.DataColumn columnID_ПОЛЬЗОВАТЕЛЯ;
            
            private global::System.Data.DataColumn columnID_АДРЕСА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫDataTable() {
                this.TableName = "ДОКУМЕНТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ДОКУМЕНТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ДОКУМЕНТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_ДОКУМЕНТАColumn {
                get {
                    return this.columnНАИМ_ДОКУМЕНТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПОЛЬЗОВАТЕЛЯColumn {
                get {
                    return this.columnID_ПОЛЬЗОВАТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_АДРЕСАColumn {
                get {
                    return this.columnID_АДРЕСА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow this[int index] {
                get {
                    return ((ДОКУМЕНТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ДОКУМЕНТЫRowChangeEventHandler ДОКУМЕНТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ДОКУМЕНТЫRowChangeEventHandler ДОКУМЕНТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ДОКУМЕНТЫRowChangeEventHandler ДОКУМЕНТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ДОКУМЕНТЫRowChangeEventHandler ДОКУМЕНТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddДОКУМЕНТЫRow(ДОКУМЕНТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow AddДОКУМЕНТЫRow(string НАИМ_ДОКУМЕНТА, ПОЛЬЗОВАТЕЛЬRow parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018512, АДРЕСА_ДОКУМЕНТОВRow parentАДРЕСА_ДОКУМЕНТОВRowBySYS_C0018513) {
                ДОКУМЕНТЫRow rowДОКУМЕНТЫRow = ((ДОКУМЕНТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        НАИМ_ДОКУМЕНТА,
                        null,
                        null};
                if ((parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018512 != null)) {
                    columnValuesArray[1] = parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018512[0];
                }
                if ((parentАДРЕСА_ДОКУМЕНТОВRowBySYS_C0018513 != null)) {
                    columnValuesArray[2] = parentАДРЕСА_ДОКУМЕНТОВRowBySYS_C0018513[0];
                }
                rowДОКУМЕНТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowДОКУМЕНТЫRow);
                return rowДОКУМЕНТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ДОКУМЕНТЫDataTable cln = ((ДОКУМЕНТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ДОКУМЕНТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnНАИМ_ДОКУМЕНТА = base.Columns["НАИМ_ДОКУМЕНТА"];
                this.columnID_ПОЛЬЗОВАТЕЛЯ = base.Columns["ID_ПОЛЬЗОВАТЕЛЯ"];
                this.columnID_АДРЕСА = base.Columns["ID_АДРЕСА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnНАИМ_ДОКУМЕНТА = new global::System.Data.DataColumn("НАИМ_ДОКУМЕНТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_ДОКУМЕНТА);
                this.columnID_ПОЛЬЗОВАТЕЛЯ = new global::System.Data.DataColumn("ID_ПОЛЬЗОВАТЕЛЯ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПОЛЬЗОВАТЕЛЯ);
                this.columnID_АДРЕСА = new global::System.Data.DataColumn("ID_АДРЕСА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_АДРЕСА);
                this.columnНАИМ_ДОКУМЕНТА.MaxLength = 30;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow NewДОКУМЕНТЫRow() {
                return ((ДОКУМЕНТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ДОКУМЕНТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ДОКУМЕНТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ДОКУМЕНТЫRowChanged != null)) {
                    this.ДОКУМЕНТЫRowChanged(this, new ДОКУМЕНТЫRowChangeEvent(((ДОКУМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ДОКУМЕНТЫRowChanging != null)) {
                    this.ДОКУМЕНТЫRowChanging(this, new ДОКУМЕНТЫRowChangeEvent(((ДОКУМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ДОКУМЕНТЫRowDeleted != null)) {
                    this.ДОКУМЕНТЫRowDeleted(this, new ДОКУМЕНТЫRowChangeEvent(((ДОКУМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ДОКУМЕНТЫRowDeleting != null)) {
                    this.ДОКУМЕНТЫRowDeleting(this, new ДОКУМЕНТЫRowChangeEvent(((ДОКУМЕНТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveДОКУМЕНТЫRow(ДОКУМЕНТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ДОКУМЕНТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class КАТЕГОРИИDataTable : global::System.Data.TypedTableBase<КАТЕГОРИИRow> {
            
            private global::System.Data.DataColumn columnID_КАТЕГОРИИ;
            
            private global::System.Data.DataColumn columnНАИМ_КАТЕГОРИИ;
            
            private global::System.Data.DataColumn columnПРИОРИТЕТНОСТЬ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИDataTable() {
                this.TableName = "КАТЕГОРИИ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КАТЕГОРИИDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected КАТЕГОРИИDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_КАТЕГОРИИColumn {
                get {
                    return this.columnID_КАТЕГОРИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_КАТЕГОРИИColumn {
                get {
                    return this.columnНАИМ_КАТЕГОРИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПРИОРИТЕТНОСТЬColumn {
                get {
                    return this.columnПРИОРИТЕТНОСТЬ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow this[int index] {
                get {
                    return ((КАТЕГОРИИRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КАТЕГОРИИRowChangeEventHandler КАТЕГОРИИRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КАТЕГОРИИRowChangeEventHandler КАТЕГОРИИRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КАТЕГОРИИRowChangeEventHandler КАТЕГОРИИRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event КАТЕГОРИИRowChangeEventHandler КАТЕГОРИИRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddКАТЕГОРИИRow(КАТЕГОРИИRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow AddКАТЕГОРИИRow(decimal ID_КАТЕГОРИИ, string НАИМ_КАТЕГОРИИ, decimal ПРИОРИТЕТНОСТЬ) {
                КАТЕГОРИИRow rowКАТЕГОРИИRow = ((КАТЕГОРИИRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_КАТЕГОРИИ,
                        НАИМ_КАТЕГОРИИ,
                        ПРИОРИТЕТНОСТЬ};
                rowКАТЕГОРИИRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowКАТЕГОРИИRow);
                return rowКАТЕГОРИИRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow FindByID_КАТЕГОРИИ(decimal ID_КАТЕГОРИИ) {
                return ((КАТЕГОРИИRow)(this.Rows.Find(new object[] {
                            ID_КАТЕГОРИИ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                КАТЕГОРИИDataTable cln = ((КАТЕГОРИИDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new КАТЕГОРИИDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_КАТЕГОРИИ = base.Columns["ID_КАТЕГОРИИ"];
                this.columnНАИМ_КАТЕГОРИИ = base.Columns["НАИМ_КАТЕГОРИИ"];
                this.columnПРИОРИТЕТНОСТЬ = base.Columns["ПРИОРИТЕТНОСТЬ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_КАТЕГОРИИ = new global::System.Data.DataColumn("ID_КАТЕГОРИИ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_КАТЕГОРИИ);
                this.columnНАИМ_КАТЕГОРИИ = new global::System.Data.DataColumn("НАИМ_КАТЕГОРИИ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_КАТЕГОРИИ);
                this.columnПРИОРИТЕТНОСТЬ = new global::System.Data.DataColumn("ПРИОРИТЕТНОСТЬ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПРИОРИТЕТНОСТЬ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_КАТЕГОРИИ}, true));
                this.columnID_КАТЕГОРИИ.AllowDBNull = false;
                this.columnID_КАТЕГОРИИ.Unique = true;
                this.columnНАИМ_КАТЕГОРИИ.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow NewКАТЕГОРИИRow() {
                return ((КАТЕГОРИИRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new КАТЕГОРИИRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(КАТЕГОРИИRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.КАТЕГОРИИRowChanged != null)) {
                    this.КАТЕГОРИИRowChanged(this, new КАТЕГОРИИRowChangeEvent(((КАТЕГОРИИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.КАТЕГОРИИRowChanging != null)) {
                    this.КАТЕГОРИИRowChanging(this, new КАТЕГОРИИRowChangeEvent(((КАТЕГОРИИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.КАТЕГОРИИRowDeleted != null)) {
                    this.КАТЕГОРИИRowDeleted(this, new КАТЕГОРИИRowChangeEvent(((КАТЕГОРИИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.КАТЕГОРИИRowDeleting != null)) {
                    this.КАТЕГОРИИRowDeleting(this, new КАТЕГОРИИRowChangeEvent(((КАТЕГОРИИRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveКАТЕГОРИИRow(КАТЕГОРИИRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "КАТЕГОРИИDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class МАТПОМОЩЬDataTable : global::System.Data.TypedTableBase<МАТПОМОЩЬRow> {
            
            private global::System.Data.DataColumn columnID_ЗАЯВЛЕНИЯ;
            
            private global::System.Data.DataColumn columnНОМ_КУРСА;
            
            private global::System.Data.DataColumn columnНАИМ_ГРУППЫ;
            
            private global::System.Data.DataColumn columnДАТА_ПОД_ЗАЯВЛЕНИЯ;
            
            private global::System.Data.DataColumn columnСТАТУС;
            
            private global::System.Data.DataColumn columnID_ПОЛЬЗОВАТЕЛЯ;
            
            private global::System.Data.DataColumn columnID_КАТЕГОРИИ;
            
            private global::System.Data.DataColumn columnВЫПЛАТИЛИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬDataTable() {
                this.TableName = "МАТПОМОЩЬ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal МАТПОМОЩЬDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected МАТПОМОЩЬDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ЗАЯВЛЕНИЯColumn {
                get {
                    return this.columnID_ЗАЯВЛЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМ_КУРСАColumn {
                get {
                    return this.columnНОМ_КУРСА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_ГРУППЫColumn {
                get {
                    return this.columnНАИМ_ГРУППЫ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ДАТА_ПОД_ЗАЯВЛЕНИЯColumn {
                get {
                    return this.columnДАТА_ПОД_ЗАЯВЛЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СТАТУСColumn {
                get {
                    return this.columnСТАТУС;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПОЛЬЗОВАТЕЛЯColumn {
                get {
                    return this.columnID_ПОЛЬЗОВАТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_КАТЕГОРИИColumn {
                get {
                    return this.columnID_КАТЕГОРИИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ВЫПЛАТИЛИColumn {
                get {
                    return this.columnВЫПЛАТИЛИ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow this[int index] {
                get {
                    return ((МАТПОМОЩЬRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МАТПОМОЩЬRowChangeEventHandler МАТПОМОЩЬRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МАТПОМОЩЬRowChangeEventHandler МАТПОМОЩЬRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МАТПОМОЩЬRowChangeEventHandler МАТПОМОЩЬRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event МАТПОМОЩЬRowChangeEventHandler МАТПОМОЩЬRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddМАТПОМОЩЬRow(МАТПОМОЩЬRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow AddМАТПОМОЩЬRow(decimal ID_ЗАЯВЛЕНИЯ, decimal НОМ_КУРСА, string НАИМ_ГРУППЫ, System.DateTime ДАТА_ПОД_ЗАЯВЛЕНИЯ, string СТАТУС, ПОЛЬЗОВАТЕЛЬRow parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018508, КАТЕГОРИИRow parentКАТЕГОРИИRowBySYS_C0018509, decimal ВЫПЛАТИЛИ) {
                МАТПОМОЩЬRow rowМАТПОМОЩЬRow = ((МАТПОМОЩЬRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ЗАЯВЛЕНИЯ,
                        НОМ_КУРСА,
                        НАИМ_ГРУППЫ,
                        ДАТА_ПОД_ЗАЯВЛЕНИЯ,
                        СТАТУС,
                        null,
                        null,
                        ВЫПЛАТИЛИ};
                if ((parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018508 != null)) {
                    columnValuesArray[5] = parentПОЛЬЗОВАТЕЛЬRowBySYS_C0018508[0];
                }
                if ((parentКАТЕГОРИИRowBySYS_C0018509 != null)) {
                    columnValuesArray[6] = parentКАТЕГОРИИRowBySYS_C0018509[0];
                }
                rowМАТПОМОЩЬRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowМАТПОМОЩЬRow);
                return rowМАТПОМОЩЬRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow FindByID_ЗАЯВЛЕНИЯ(decimal ID_ЗАЯВЛЕНИЯ) {
                return ((МАТПОМОЩЬRow)(this.Rows.Find(new object[] {
                            ID_ЗАЯВЛЕНИЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                МАТПОМОЩЬDataTable cln = ((МАТПОМОЩЬDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new МАТПОМОЩЬDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ЗАЯВЛЕНИЯ = base.Columns["ID_ЗАЯВЛЕНИЯ"];
                this.columnНОМ_КУРСА = base.Columns["НОМ_КУРСА"];
                this.columnНАИМ_ГРУППЫ = base.Columns["НАИМ_ГРУППЫ"];
                this.columnДАТА_ПОД_ЗАЯВЛЕНИЯ = base.Columns["ДАТА_ПОД_ЗАЯВЛЕНИЯ"];
                this.columnСТАТУС = base.Columns["СТАТУС"];
                this.columnID_ПОЛЬЗОВАТЕЛЯ = base.Columns["ID_ПОЛЬЗОВАТЕЛЯ"];
                this.columnID_КАТЕГОРИИ = base.Columns["ID_КАТЕГОРИИ"];
                this.columnВЫПЛАТИЛИ = base.Columns["ВЫПЛАТИЛИ"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ЗАЯВЛЕНИЯ = new global::System.Data.DataColumn("ID_ЗАЯВЛЕНИЯ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ЗАЯВЛЕНИЯ);
                this.columnНОМ_КУРСА = new global::System.Data.DataColumn("НОМ_КУРСА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМ_КУРСА);
                this.columnНАИМ_ГРУППЫ = new global::System.Data.DataColumn("НАИМ_ГРУППЫ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_ГРУППЫ);
                this.columnДАТА_ПОД_ЗАЯВЛЕНИЯ = new global::System.Data.DataColumn("ДАТА_ПОД_ЗАЯВЛЕНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_ПОД_ЗАЯВЛЕНИЯ);
                this.columnСТАТУС = new global::System.Data.DataColumn("СТАТУС", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСТАТУС);
                this.columnID_ПОЛЬЗОВАТЕЛЯ = new global::System.Data.DataColumn("ID_ПОЛЬЗОВАТЕЛЯ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПОЛЬЗОВАТЕЛЯ);
                this.columnID_КАТЕГОРИИ = new global::System.Data.DataColumn("ID_КАТЕГОРИИ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_КАТЕГОРИИ);
                this.columnВЫПЛАТИЛИ = new global::System.Data.DataColumn("ВЫПЛАТИЛИ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnВЫПЛАТИЛИ);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ЗАЯВЛЕНИЯ}, true));
                this.columnID_ЗАЯВЛЕНИЯ.AllowDBNull = false;
                this.columnID_ЗАЯВЛЕНИЯ.Unique = true;
                this.columnНАИМ_ГРУППЫ.MaxLength = 10;
                this.columnСТАТУС.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow NewМАТПОМОЩЬRow() {
                return ((МАТПОМОЩЬRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new МАТПОМОЩЬRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(МАТПОМОЩЬRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.МАТПОМОЩЬRowChanged != null)) {
                    this.МАТПОМОЩЬRowChanged(this, new МАТПОМОЩЬRowChangeEvent(((МАТПОМОЩЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.МАТПОМОЩЬRowChanging != null)) {
                    this.МАТПОМОЩЬRowChanging(this, new МАТПОМОЩЬRowChangeEvent(((МАТПОМОЩЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.МАТПОМОЩЬRowDeleted != null)) {
                    this.МАТПОМОЩЬRowDeleted(this, new МАТПОМОЩЬRowChangeEvent(((МАТПОМОЩЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.МАТПОМОЩЬRowDeleting != null)) {
                    this.МАТПОМОЩЬRowDeleting(this, new МАТПОМОЩЬRowChangeEvent(((МАТПОМОЩЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveМАТПОМОЩЬRow(МАТПОМОЩЬRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "МАТПОМОЩЬDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПАСПОРТАDataTable : global::System.Data.TypedTableBase<ПАСПОРТАRow> {
            
            private global::System.Data.DataColumn columnID_ПАСПОРТА;
            
            private global::System.Data.DataColumn columnСЕРИЯ;
            
            private global::System.Data.DataColumn columnНОМЕР;
            
            private global::System.Data.DataColumn columnКЕМ_ВЫДАН;
            
            private global::System.Data.DataColumn columnКОГДА_ВЫДАН;
            
            private global::System.Data.DataColumn columnЗАРЕГИСТРИРОВАН;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАDataTable() {
                this.TableName = "ПАСПОРТА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПАСПОРТАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПАСПОРТАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПАСПОРТАColumn {
                get {
                    return this.columnID_ПАСПОРТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn СЕРИЯColumn {
                get {
                    return this.columnСЕРИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМЕРColumn {
                get {
                    return this.columnНОМЕР;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КЕМ_ВЫДАНColumn {
                get {
                    return this.columnКЕМ_ВЫДАН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КОГДА_ВЫДАНColumn {
                get {
                    return this.columnКОГДА_ВЫДАН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ЗАРЕГИСТРИРОВАНColumn {
                get {
                    return this.columnЗАРЕГИСТРИРОВАН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow this[int index] {
                get {
                    return ((ПАСПОРТАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПАСПОРТАRowChangeEventHandler ПАСПОРТАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПАСПОРТАRowChangeEventHandler ПАСПОРТАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПАСПОРТАRowChangeEventHandler ПАСПОРТАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПАСПОРТАRowChangeEventHandler ПАСПОРТАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПАСПОРТАRow(ПАСПОРТАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow AddПАСПОРТАRow(decimal ID_ПАСПОРТА, decimal СЕРИЯ, decimal НОМЕР, string КЕМ_ВЫДАН, System.DateTime КОГДА_ВЫДАН, string ЗАРЕГИСТРИРОВАН) {
                ПАСПОРТАRow rowПАСПОРТАRow = ((ПАСПОРТАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ПАСПОРТА,
                        СЕРИЯ,
                        НОМЕР,
                        КЕМ_ВЫДАН,
                        КОГДА_ВЫДАН,
                        ЗАРЕГИСТРИРОВАН};
                rowПАСПОРТАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПАСПОРТАRow);
                return rowПАСПОРТАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow FindByID_ПАСПОРТА(decimal ID_ПАСПОРТА) {
                return ((ПАСПОРТАRow)(this.Rows.Find(new object[] {
                            ID_ПАСПОРТА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПАСПОРТАDataTable cln = ((ПАСПОРТАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПАСПОРТАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ПАСПОРТА = base.Columns["ID_ПАСПОРТА"];
                this.columnСЕРИЯ = base.Columns["СЕРИЯ"];
                this.columnНОМЕР = base.Columns["НОМЕР"];
                this.columnКЕМ_ВЫДАН = base.Columns["КЕМ_ВЫДАН"];
                this.columnКОГДА_ВЫДАН = base.Columns["КОГДА_ВЫДАН"];
                this.columnЗАРЕГИСТРИРОВАН = base.Columns["ЗАРЕГИСТРИРОВАН"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ПАСПОРТА = new global::System.Data.DataColumn("ID_ПАСПОРТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПАСПОРТА);
                this.columnСЕРИЯ = new global::System.Data.DataColumn("СЕРИЯ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnСЕРИЯ);
                this.columnНОМЕР = new global::System.Data.DataColumn("НОМЕР", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР);
                this.columnКЕМ_ВЫДАН = new global::System.Data.DataColumn("КЕМ_ВЫДАН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКЕМ_ВЫДАН);
                this.columnКОГДА_ВЫДАН = new global::System.Data.DataColumn("КОГДА_ВЫДАН", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОГДА_ВЫДАН);
                this.columnЗАРЕГИСТРИРОВАН = new global::System.Data.DataColumn("ЗАРЕГИСТРИРОВАН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЗАРЕГИСТРИРОВАН);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ПАСПОРТА}, true));
                this.columnID_ПАСПОРТА.AllowDBNull = false;
                this.columnID_ПАСПОРТА.Unique = true;
                this.columnКЕМ_ВЫДАН.MaxLength = 300;
                this.columnЗАРЕГИСТРИРОВАН.MaxLength = 300;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow NewПАСПОРТАRow() {
                return ((ПАСПОРТАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПАСПОРТАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПАСПОРТАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПАСПОРТАRowChanged != null)) {
                    this.ПАСПОРТАRowChanged(this, new ПАСПОРТАRowChangeEvent(((ПАСПОРТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПАСПОРТАRowChanging != null)) {
                    this.ПАСПОРТАRowChanging(this, new ПАСПОРТАRowChangeEvent(((ПАСПОРТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПАСПОРТАRowDeleted != null)) {
                    this.ПАСПОРТАRowDeleted(this, new ПАСПОРТАRowChangeEvent(((ПАСПОРТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПАСПОРТАRowDeleting != null)) {
                    this.ПАСПОРТАRowDeleting(this, new ПАСПОРТАRowChangeEvent(((ПАСПОРТАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПАСПОРТАRow(ПАСПОРТАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПАСПОРТАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПОЛЬЗОВАТЕЛЬDataTable : global::System.Data.TypedTableBase<ПОЛЬЗОВАТЕЛЬRow> {
            
            private global::System.Data.DataColumn columnID_ПОЛЬЗОВАТЕЛЯ;
            
            private global::System.Data.DataColumn columnФИО;
            
            private global::System.Data.DataColumn columnПОЛ;
            
            private global::System.Data.DataColumn columnПАРОЛЬ;
            
            private global::System.Data.DataColumn columnЛОГИН;
            
            private global::System.Data.DataColumn columnНОМ_ИНН;
            
            private global::System.Data.DataColumn columnАББРЕВ_ИНСТИТУТА;
            
            private global::System.Data.DataColumn columnНОМ_ТЕЛ;
            
            private global::System.Data.DataColumn columnДАТА_РОЖДЕНИЯ;
            
            private global::System.Data.DataColumn columnID_ТИПА_ПОЛЬЗ;
            
            private global::System.Data.DataColumn columnID_ПАСПОРТА;
            
            private global::System.Data.DataColumn columnID_РЕКВИЗ_БАНКА;
            
            private global::System.Data.DataColumn columnID_ПРОФ_БИЛЕТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬDataTable() {
                this.TableName = "ПОЛЬЗОВАТЕЛЬ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОЛЬЗОВАТЕЛЬDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПОЛЬЗОВАТЕЛЬDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПОЛЬЗОВАТЕЛЯColumn {
                get {
                    return this.columnID_ПОЛЬЗОВАТЕЛЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ФИОColumn {
                get {
                    return this.columnФИО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПОЛColumn {
                get {
                    return this.columnПОЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ПАРОЛЬColumn {
                get {
                    return this.columnПАРОЛЬ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ЛОГИНColumn {
                get {
                    return this.columnЛОГИН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМ_ИННColumn {
                get {
                    return this.columnНОМ_ИНН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn АББРЕВ_ИНСТИТУТАColumn {
                get {
                    return this.columnАББРЕВ_ИНСТИТУТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМ_ТЕЛColumn {
                get {
                    return this.columnНОМ_ТЕЛ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ДАТА_РОЖДЕНИЯColumn {
                get {
                    return this.columnДАТА_РОЖДЕНИЯ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ТИПА_ПОЛЬЗColumn {
                get {
                    return this.columnID_ТИПА_ПОЛЬЗ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПАСПОРТАColumn {
                get {
                    return this.columnID_ПАСПОРТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_РЕКВИЗ_БАНКАColumn {
                get {
                    return this.columnID_РЕКВИЗ_БАНКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПРОФ_БИЛЕТАColumn {
                get {
                    return this.columnID_ПРОФ_БИЛЕТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow this[int index] {
                get {
                    return ((ПОЛЬЗОВАТЕЛЬRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОЛЬЗОВАТЕЛЬRowChangeEventHandler ПОЛЬЗОВАТЕЛЬRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОЛЬЗОВАТЕЛЬRowChangeEventHandler ПОЛЬЗОВАТЕЛЬRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОЛЬЗОВАТЕЛЬRowChangeEventHandler ПОЛЬЗОВАТЕЛЬRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПОЛЬЗОВАТЕЛЬRowChangeEventHandler ПОЛЬЗОВАТЕЛЬRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПОЛЬЗОВАТЕЛЬRow(ПОЛЬЗОВАТЕЛЬRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow AddПОЛЬЗОВАТЕЛЬRow(decimal ID_ПОЛЬЗОВАТЕЛЯ, string ФИО, string ПОЛ, string ПАРОЛЬ, string ЛОГИН, decimal НОМ_ИНН, string АББРЕВ_ИНСТИТУТА, decimal НОМ_ТЕЛ, System.DateTime ДАТА_РОЖДЕНИЯ, ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow parentТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowBySYS_C0018502, ПАСПОРТАRow parentПАСПОРТАRowBySYS_C0018503, РЕКВИЗИТЫ_БАНКАRow parentРЕКВИЗИТЫ_БАНКАRowBySYS_C0018504, ПРОФ_БИЛЕТЫRow parentПРОФ_БИЛЕТЫRowBySYS_C0018505) {
                ПОЛЬЗОВАТЕЛЬRow rowПОЛЬЗОВАТЕЛЬRow = ((ПОЛЬЗОВАТЕЛЬRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ПОЛЬЗОВАТЕЛЯ,
                        ФИО,
                        ПОЛ,
                        ПАРОЛЬ,
                        ЛОГИН,
                        НОМ_ИНН,
                        АББРЕВ_ИНСТИТУТА,
                        НОМ_ТЕЛ,
                        ДАТА_РОЖДЕНИЯ,
                        null,
                        null,
                        null,
                        null};
                if ((parentТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowBySYS_C0018502 != null)) {
                    columnValuesArray[9] = parentТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowBySYS_C0018502[0];
                }
                if ((parentПАСПОРТАRowBySYS_C0018503 != null)) {
                    columnValuesArray[10] = parentПАСПОРТАRowBySYS_C0018503[0];
                }
                if ((parentРЕКВИЗИТЫ_БАНКАRowBySYS_C0018504 != null)) {
                    columnValuesArray[11] = parentРЕКВИЗИТЫ_БАНКАRowBySYS_C0018504[0];
                }
                if ((parentПРОФ_БИЛЕТЫRowBySYS_C0018505 != null)) {
                    columnValuesArray[12] = parentПРОФ_БИЛЕТЫRowBySYS_C0018505[0];
                }
                rowПОЛЬЗОВАТЕЛЬRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПОЛЬЗОВАТЕЛЬRow);
                return rowПОЛЬЗОВАТЕЛЬRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow FindByID_ПОЛЬЗОВАТЕЛЯ(decimal ID_ПОЛЬЗОВАТЕЛЯ) {
                return ((ПОЛЬЗОВАТЕЛЬRow)(this.Rows.Find(new object[] {
                            ID_ПОЛЬЗОВАТЕЛЯ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПОЛЬЗОВАТЕЛЬDataTable cln = ((ПОЛЬЗОВАТЕЛЬDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПОЛЬЗОВАТЕЛЬDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ПОЛЬЗОВАТЕЛЯ = base.Columns["ID_ПОЛЬЗОВАТЕЛЯ"];
                this.columnФИО = base.Columns["ФИО"];
                this.columnПОЛ = base.Columns["ПОЛ"];
                this.columnПАРОЛЬ = base.Columns["ПАРОЛЬ"];
                this.columnЛОГИН = base.Columns["ЛОГИН"];
                this.columnНОМ_ИНН = base.Columns["НОМ_ИНН"];
                this.columnАББРЕВ_ИНСТИТУТА = base.Columns["АББРЕВ_ИНСТИТУТА"];
                this.columnНОМ_ТЕЛ = base.Columns["НОМ_ТЕЛ"];
                this.columnДАТА_РОЖДЕНИЯ = base.Columns["ДАТА_РОЖДЕНИЯ"];
                this.columnID_ТИПА_ПОЛЬЗ = base.Columns["ID_ТИПА_ПОЛЬЗ"];
                this.columnID_ПАСПОРТА = base.Columns["ID_ПАСПОРТА"];
                this.columnID_РЕКВИЗ_БАНКА = base.Columns["ID_РЕКВИЗ_БАНКА"];
                this.columnID_ПРОФ_БИЛЕТА = base.Columns["ID_ПРОФ_БИЛЕТА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ПОЛЬЗОВАТЕЛЯ = new global::System.Data.DataColumn("ID_ПОЛЬЗОВАТЕЛЯ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПОЛЬЗОВАТЕЛЯ);
                this.columnФИО = new global::System.Data.DataColumn("ФИО", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnФИО);
                this.columnПОЛ = new global::System.Data.DataColumn("ПОЛ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПОЛ);
                this.columnПАРОЛЬ = new global::System.Data.DataColumn("ПАРОЛЬ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnПАРОЛЬ);
                this.columnЛОГИН = new global::System.Data.DataColumn("ЛОГИН", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnЛОГИН);
                this.columnНОМ_ИНН = new global::System.Data.DataColumn("НОМ_ИНН", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМ_ИНН);
                this.columnАББРЕВ_ИНСТИТУТА = new global::System.Data.DataColumn("АББРЕВ_ИНСТИТУТА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnАББРЕВ_ИНСТИТУТА);
                this.columnНОМ_ТЕЛ = new global::System.Data.DataColumn("НОМ_ТЕЛ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМ_ТЕЛ);
                this.columnДАТА_РОЖДЕНИЯ = new global::System.Data.DataColumn("ДАТА_РОЖДЕНИЯ", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnДАТА_РОЖДЕНИЯ);
                this.columnID_ТИПА_ПОЛЬЗ = new global::System.Data.DataColumn("ID_ТИПА_ПОЛЬЗ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ТИПА_ПОЛЬЗ);
                this.columnID_ПАСПОРТА = new global::System.Data.DataColumn("ID_ПАСПОРТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПАСПОРТА);
                this.columnID_РЕКВИЗ_БАНКА = new global::System.Data.DataColumn("ID_РЕКВИЗ_БАНКА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_РЕКВИЗ_БАНКА);
                this.columnID_ПРОФ_БИЛЕТА = new global::System.Data.DataColumn("ID_ПРОФ_БИЛЕТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПРОФ_БИЛЕТА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ПОЛЬЗОВАТЕЛЯ}, true));
                this.columnID_ПОЛЬЗОВАТЕЛЯ.AllowDBNull = false;
                this.columnID_ПОЛЬЗОВАТЕЛЯ.Unique = true;
                this.columnФИО.MaxLength = 150;
                this.columnПОЛ.MaxLength = 2;
                this.columnПАРОЛЬ.MaxLength = 20;
                this.columnЛОГИН.MaxLength = 20;
                this.columnАББРЕВ_ИНСТИТУТА.MaxLength = 10;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow NewПОЛЬЗОВАТЕЛЬRow() {
                return ((ПОЛЬЗОВАТЕЛЬRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПОЛЬЗОВАТЕЛЬRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПОЛЬЗОВАТЕЛЬRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПОЛЬЗОВАТЕЛЬRowChanged != null)) {
                    this.ПОЛЬЗОВАТЕЛЬRowChanged(this, new ПОЛЬЗОВАТЕЛЬRowChangeEvent(((ПОЛЬЗОВАТЕЛЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПОЛЬЗОВАТЕЛЬRowChanging != null)) {
                    this.ПОЛЬЗОВАТЕЛЬRowChanging(this, new ПОЛЬЗОВАТЕЛЬRowChangeEvent(((ПОЛЬЗОВАТЕЛЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПОЛЬЗОВАТЕЛЬRowDeleted != null)) {
                    this.ПОЛЬЗОВАТЕЛЬRowDeleted(this, new ПОЛЬЗОВАТЕЛЬRowChangeEvent(((ПОЛЬЗОВАТЕЛЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПОЛЬЗОВАТЕЛЬRowDeleting != null)) {
                    this.ПОЛЬЗОВАТЕЛЬRowDeleting(this, new ПОЛЬЗОВАТЕЛЬRowChangeEvent(((ПОЛЬЗОВАТЕЛЬRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПОЛЬЗОВАТЕЛЬRow(ПОЛЬЗОВАТЕЛЬRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПОЛЬЗОВАТЕЛЬDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ПРОФ_БИЛЕТЫDataTable : global::System.Data.TypedTableBase<ПРОФ_БИЛЕТЫRow> {
            
            private global::System.Data.DataColumn columnID_ПРОФ_БИЛЕТА;
            
            private global::System.Data.DataColumn columnНОМЕР_БИЛЕТА;
            
            private global::System.Data.DataColumn columnКОГДА_ВЫДАН;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫDataTable() {
                this.TableName = "ПРОФ_БИЛЕТЫ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПРОФ_БИЛЕТЫDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ПРОФ_БИЛЕТЫDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ПРОФ_БИЛЕТАColumn {
                get {
                    return this.columnID_ПРОФ_БИЛЕТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМЕР_БИЛЕТАColumn {
                get {
                    return this.columnНОМЕР_БИЛЕТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КОГДА_ВЫДАНColumn {
                get {
                    return this.columnКОГДА_ВЫДАН;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow this[int index] {
                get {
                    return ((ПРОФ_БИЛЕТЫRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОФ_БИЛЕТЫRowChangeEventHandler ПРОФ_БИЛЕТЫRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОФ_БИЛЕТЫRowChangeEventHandler ПРОФ_БИЛЕТЫRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОФ_БИЛЕТЫRowChangeEventHandler ПРОФ_БИЛЕТЫRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ПРОФ_БИЛЕТЫRowChangeEventHandler ПРОФ_БИЛЕТЫRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddПРОФ_БИЛЕТЫRow(ПРОФ_БИЛЕТЫRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow AddПРОФ_БИЛЕТЫRow(decimal ID_ПРОФ_БИЛЕТА, decimal НОМЕР_БИЛЕТА, System.DateTime КОГДА_ВЫДАН) {
                ПРОФ_БИЛЕТЫRow rowПРОФ_БИЛЕТЫRow = ((ПРОФ_БИЛЕТЫRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ПРОФ_БИЛЕТА,
                        НОМЕР_БИЛЕТА,
                        КОГДА_ВЫДАН};
                rowПРОФ_БИЛЕТЫRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowПРОФ_БИЛЕТЫRow);
                return rowПРОФ_БИЛЕТЫRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow FindByID_ПРОФ_БИЛЕТА(decimal ID_ПРОФ_БИЛЕТА) {
                return ((ПРОФ_БИЛЕТЫRow)(this.Rows.Find(new object[] {
                            ID_ПРОФ_БИЛЕТА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ПРОФ_БИЛЕТЫDataTable cln = ((ПРОФ_БИЛЕТЫDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ПРОФ_БИЛЕТЫDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ПРОФ_БИЛЕТА = base.Columns["ID_ПРОФ_БИЛЕТА"];
                this.columnНОМЕР_БИЛЕТА = base.Columns["НОМЕР_БИЛЕТА"];
                this.columnКОГДА_ВЫДАН = base.Columns["КОГДА_ВЫДАН"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ПРОФ_БИЛЕТА = new global::System.Data.DataColumn("ID_ПРОФ_БИЛЕТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ПРОФ_БИЛЕТА);
                this.columnНОМЕР_БИЛЕТА = new global::System.Data.DataColumn("НОМЕР_БИЛЕТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМЕР_БИЛЕТА);
                this.columnКОГДА_ВЫДАН = new global::System.Data.DataColumn("КОГДА_ВЫДАН", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОГДА_ВЫДАН);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ПРОФ_БИЛЕТА}, true));
                this.columnID_ПРОФ_БИЛЕТА.AllowDBNull = false;
                this.columnID_ПРОФ_БИЛЕТА.Unique = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow NewПРОФ_БИЛЕТЫRow() {
                return ((ПРОФ_БИЛЕТЫRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ПРОФ_БИЛЕТЫRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ПРОФ_БИЛЕТЫRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ПРОФ_БИЛЕТЫRowChanged != null)) {
                    this.ПРОФ_БИЛЕТЫRowChanged(this, new ПРОФ_БИЛЕТЫRowChangeEvent(((ПРОФ_БИЛЕТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ПРОФ_БИЛЕТЫRowChanging != null)) {
                    this.ПРОФ_БИЛЕТЫRowChanging(this, new ПРОФ_БИЛЕТЫRowChangeEvent(((ПРОФ_БИЛЕТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ПРОФ_БИЛЕТЫRowDeleted != null)) {
                    this.ПРОФ_БИЛЕТЫRowDeleted(this, new ПРОФ_БИЛЕТЫRowChangeEvent(((ПРОФ_БИЛЕТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ПРОФ_БИЛЕТЫRowDeleting != null)) {
                    this.ПРОФ_БИЛЕТЫRowDeleting(this, new ПРОФ_БИЛЕТЫRowChangeEvent(((ПРОФ_БИЛЕТЫRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveПРОФ_БИЛЕТЫRow(ПРОФ_БИЛЕТЫRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ПРОФ_БИЛЕТЫDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class РЕКВИЗИТЫ_БАНКАDataTable : global::System.Data.TypedTableBase<РЕКВИЗИТЫ_БАНКАRow> {
            
            private global::System.Data.DataColumn columnID_РЕКВИЗ_БАНКА;
            
            private global::System.Data.DataColumn columnНАИМ_БАНКА;
            
            private global::System.Data.DataColumn columnНОМ_ЛИЦ_СЧЁТА;
            
            private global::System.Data.DataColumn columnБИК;
            
            private global::System.Data.DataColumn columnГОДЕН_ДО;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАDataTable() {
                this.TableName = "РЕКВИЗИТЫ_БАНКА";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РЕКВИЗИТЫ_БАНКАDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected РЕКВИЗИТЫ_БАНКАDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_РЕКВИЗ_БАНКАColumn {
                get {
                    return this.columnID_РЕКВИЗ_БАНКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_БАНКАColumn {
                get {
                    return this.columnНАИМ_БАНКА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НОМ_ЛИЦ_СЧЁТАColumn {
                get {
                    return this.columnНОМ_ЛИЦ_СЧЁТА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn БИКColumn {
                get {
                    return this.columnБИК;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ГОДЕН_ДОColumn {
                get {
                    return this.columnГОДЕН_ДО;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow this[int index] {
                get {
                    return ((РЕКВИЗИТЫ_БАНКАRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РЕКВИЗИТЫ_БАНКАRowChangeEventHandler РЕКВИЗИТЫ_БАНКАRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РЕКВИЗИТЫ_БАНКАRowChangeEventHandler РЕКВИЗИТЫ_БАНКАRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РЕКВИЗИТЫ_БАНКАRowChangeEventHandler РЕКВИЗИТЫ_БАНКАRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event РЕКВИЗИТЫ_БАНКАRowChangeEventHandler РЕКВИЗИТЫ_БАНКАRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddРЕКВИЗИТЫ_БАНКАRow(РЕКВИЗИТЫ_БАНКАRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow AddРЕКВИЗИТЫ_БАНКАRow(decimal ID_РЕКВИЗ_БАНКА, string НАИМ_БАНКА, decimal НОМ_ЛИЦ_СЧЁТА, decimal БИК, System.DateTime ГОДЕН_ДО) {
                РЕКВИЗИТЫ_БАНКАRow rowРЕКВИЗИТЫ_БАНКАRow = ((РЕКВИЗИТЫ_БАНКАRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_РЕКВИЗ_БАНКА,
                        НАИМ_БАНКА,
                        НОМ_ЛИЦ_СЧЁТА,
                        БИК,
                        ГОДЕН_ДО};
                rowРЕКВИЗИТЫ_БАНКАRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowРЕКВИЗИТЫ_БАНКАRow);
                return rowРЕКВИЗИТЫ_БАНКАRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow FindByID_РЕКВИЗ_БАНКА(decimal ID_РЕКВИЗ_БАНКА) {
                return ((РЕКВИЗИТЫ_БАНКАRow)(this.Rows.Find(new object[] {
                            ID_РЕКВИЗ_БАНКА})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                РЕКВИЗИТЫ_БАНКАDataTable cln = ((РЕКВИЗИТЫ_БАНКАDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new РЕКВИЗИТЫ_БАНКАDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_РЕКВИЗ_БАНКА = base.Columns["ID_РЕКВИЗ_БАНКА"];
                this.columnНАИМ_БАНКА = base.Columns["НАИМ_БАНКА"];
                this.columnНОМ_ЛИЦ_СЧЁТА = base.Columns["НОМ_ЛИЦ_СЧЁТА"];
                this.columnБИК = base.Columns["БИК"];
                this.columnГОДЕН_ДО = base.Columns["ГОДЕН_ДО"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_РЕКВИЗ_БАНКА = new global::System.Data.DataColumn("ID_РЕКВИЗ_БАНКА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_РЕКВИЗ_БАНКА);
                this.columnНАИМ_БАНКА = new global::System.Data.DataColumn("НАИМ_БАНКА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_БАНКА);
                this.columnНОМ_ЛИЦ_СЧЁТА = new global::System.Data.DataColumn("НОМ_ЛИЦ_СЧЁТА", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНОМ_ЛИЦ_СЧЁТА);
                this.columnБИК = new global::System.Data.DataColumn("БИК", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnБИК);
                this.columnГОДЕН_ДО = new global::System.Data.DataColumn("ГОДЕН_ДО", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnГОДЕН_ДО);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_РЕКВИЗ_БАНКА}, true));
                this.columnID_РЕКВИЗ_БАНКА.AllowDBNull = false;
                this.columnID_РЕКВИЗ_БАНКА.Unique = true;
                this.columnНАИМ_БАНКА.MaxLength = 35;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow NewРЕКВИЗИТЫ_БАНКАRow() {
                return ((РЕКВИЗИТЫ_БАНКАRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new РЕКВИЗИТЫ_БАНКАRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(РЕКВИЗИТЫ_БАНКАRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.РЕКВИЗИТЫ_БАНКАRowChanged != null)) {
                    this.РЕКВИЗИТЫ_БАНКАRowChanged(this, new РЕКВИЗИТЫ_БАНКАRowChangeEvent(((РЕКВИЗИТЫ_БАНКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.РЕКВИЗИТЫ_БАНКАRowChanging != null)) {
                    this.РЕКВИЗИТЫ_БАНКАRowChanging(this, new РЕКВИЗИТЫ_БАНКАRowChangeEvent(((РЕКВИЗИТЫ_БАНКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.РЕКВИЗИТЫ_БАНКАRowDeleted != null)) {
                    this.РЕКВИЗИТЫ_БАНКАRowDeleted(this, new РЕКВИЗИТЫ_БАНКАRowChangeEvent(((РЕКВИЗИТЫ_БАНКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.РЕКВИЗИТЫ_БАНКАRowDeleting != null)) {
                    this.РЕКВИЗИТЫ_БАНКАRowDeleting(this, new РЕКВИЗИТЫ_БАНКАRowChangeEvent(((РЕКВИЗИТЫ_БАНКАRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveРЕКВИЗИТЫ_БАНКАRow(РЕКВИЗИТЫ_БАНКАRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "РЕКВИЗИТЫ_БАНКАDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable : global::System.Data.TypedTableBase<ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow> {
            
            private global::System.Data.DataColumn columnID_ТИПА_ПОЛЬЗ;
            
            private global::System.Data.DataColumn columnНАИМ_ПОЛЬЗ;
            
            private global::System.Data.DataColumn columnКОД_ДОСТУПА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable() {
                this.TableName = "ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn ID_ТИПА_ПОЛЬЗColumn {
                get {
                    return this.columnID_ТИПА_ПОЛЬЗ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn НАИМ_ПОЛЬЗColumn {
                get {
                    return this.columnНАИМ_ПОЛЬЗ;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataColumn КОД_ДОСТУПАColumn {
                get {
                    return this.columnКОД_ДОСТУПА;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow this[int index] {
                get {
                    return ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEventHandler ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEventHandler ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEventHandler ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public event ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEventHandler ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void AddТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow(ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow AddТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow(decimal ID_ТИПА_ПОЛЬЗ, string НАИМ_ПОЛЬЗ, string КОД_ДОСТУПА) {
                ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow rowТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow = ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID_ТИПА_ПОЛЬЗ,
                        НАИМ_ПОЛЬЗ,
                        КОД_ДОСТУПА};
                rowТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow);
                return rowТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow FindByID_ТИПА_ПОЛЬЗ(decimal ID_ТИПА_ПОЛЬЗ) {
                return ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(this.Rows.Find(new object[] {
                            ID_ТИПА_ПОЛЬЗ})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable cln = ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal void InitVars() {
                this.columnID_ТИПА_ПОЛЬЗ = base.Columns["ID_ТИПА_ПОЛЬЗ"];
                this.columnНАИМ_ПОЛЬЗ = base.Columns["НАИМ_ПОЛЬЗ"];
                this.columnКОД_ДОСТУПА = base.Columns["КОД_ДОСТУПА"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private void InitClass() {
                this.columnID_ТИПА_ПОЛЬЗ = new global::System.Data.DataColumn("ID_ТИПА_ПОЛЬЗ", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID_ТИПА_ПОЛЬЗ);
                this.columnНАИМ_ПОЛЬЗ = new global::System.Data.DataColumn("НАИМ_ПОЛЬЗ", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnНАИМ_ПОЛЬЗ);
                this.columnКОД_ДОСТУПА = new global::System.Data.DataColumn("КОД_ДОСТУПА", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnКОД_ДОСТУПА);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnID_ТИПА_ПОЛЬЗ}, true));
                this.columnID_ТИПА_ПОЛЬЗ.AllowDBNull = false;
                this.columnID_ТИПА_ПОЛЬЗ.Unique = true;
                this.columnНАИМ_ПОЛЬЗ.MaxLength = 35;
                this.columnКОД_ДОСТУПА.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow NewТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow() {
                return ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanged != null)) {
                    this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanged(this, new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent(((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanging != null)) {
                    this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChanging(this, new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent(((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleted != null)) {
                    this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleted(this, new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent(((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleting != null)) {
                    this.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowDeleting(this, new ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent(((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void RemoveТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow(ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class АДРЕСА_ДОКУМЕНТОВRow : global::System.Data.DataRow {
            
            private АДРЕСА_ДОКУМЕНТОВDataTable tableАДРЕСА_ДОКУМЕНТОВ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal АДРЕСА_ДОКУМЕНТОВRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableАДРЕСА_ДОКУМЕНТОВ = ((АДРЕСА_ДОКУМЕНТОВDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_АДРЕСА {
                get {
                    return ((decimal)(this[this.tableАДРЕСА_ДОКУМЕНТОВ.ID_АДРЕСАColumn]));
                }
                set {
                    this[this.tableАДРЕСА_ДОКУМЕНТОВ.ID_АДРЕСАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_ПАПКИ {
                get {
                    try {
                        return ((string)(this[this.tableАДРЕСА_ДОКУМЕНТОВ.НАИМ_ПАПКИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_ПАПКИ\' в таблице \'АДРЕСА_ДОКУМЕНТОВ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableАДРЕСА_ДОКУМЕНТОВ.НАИМ_ПАПКИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_ПАПКИNull() {
                return this.IsNull(this.tableАДРЕСА_ДОКУМЕНТОВ.НАИМ_ПАПКИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_ПАПКИNull() {
                this[this.tableАДРЕСА_ДОКУМЕНТОВ.НАИМ_ПАПКИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow[] GetДОКУМЕНТЫRows() {
                if ((this.Table.ChildRelations["SYS_C0018513"] == null)) {
                    return new ДОКУМЕНТЫRow[0];
                }
                else {
                    return ((ДОКУМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018513"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ДОКУМЕНТЫRow : global::System.Data.DataRow {
            
            private ДОКУМЕНТЫDataTable tableДОКУМЕНТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ДОКУМЕНТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableДОКУМЕНТЫ = ((ДОКУМЕНТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_ДОКУМЕНТА {
                get {
                    try {
                        return ((string)(this[this.tableДОКУМЕНТЫ.НАИМ_ДОКУМЕНТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_ДОКУМЕНТА\' в таблице \'ДОКУМЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОКУМЕНТЫ.НАИМ_ДОКУМЕНТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПОЛЬЗОВАТЕЛЯ {
                get {
                    try {
                        return ((decimal)(this[this.tableДОКУМЕНТЫ.ID_ПОЛЬЗОВАТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_ПОЛЬЗОВАТЕЛЯ\' в таблице \'ДОКУМЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОКУМЕНТЫ.ID_ПОЛЬЗОВАТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_АДРЕСА {
                get {
                    try {
                        return ((decimal)(this[this.tableДОКУМЕНТЫ.ID_АДРЕСАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_АДРЕСА\' в таблице \'ДОКУМЕНТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableДОКУМЕНТЫ.ID_АДРЕСАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow ПОЛЬЗОВАТЕЛЬRow {
                get {
                    return ((ПОЛЬЗОВАТЕЛЬRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018512"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018512"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow АДРЕСА_ДОКУМЕНТОВRow {
                get {
                    return ((АДРЕСА_ДОКУМЕНТОВRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018513"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018513"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_ДОКУМЕНТАNull() {
                return this.IsNull(this.tableДОКУМЕНТЫ.НАИМ_ДОКУМЕНТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_ДОКУМЕНТАNull() {
                this[this.tableДОКУМЕНТЫ.НАИМ_ДОКУМЕНТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_ПОЛЬЗОВАТЕЛЯNull() {
                return this.IsNull(this.tableДОКУМЕНТЫ.ID_ПОЛЬЗОВАТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_ПОЛЬЗОВАТЕЛЯNull() {
                this[this.tableДОКУМЕНТЫ.ID_ПОЛЬЗОВАТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_АДРЕСАNull() {
                return this.IsNull(this.tableДОКУМЕНТЫ.ID_АДРЕСАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_АДРЕСАNull() {
                this[this.tableДОКУМЕНТЫ.ID_АДРЕСАColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class КАТЕГОРИИRow : global::System.Data.DataRow {
            
            private КАТЕГОРИИDataTable tableКАТЕГОРИИ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal КАТЕГОРИИRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableКАТЕГОРИИ = ((КАТЕГОРИИDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_КАТЕГОРИИ {
                get {
                    return ((decimal)(this[this.tableКАТЕГОРИИ.ID_КАТЕГОРИИColumn]));
                }
                set {
                    this[this.tableКАТЕГОРИИ.ID_КАТЕГОРИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_КАТЕГОРИИ {
                get {
                    try {
                        return ((string)(this[this.tableКАТЕГОРИИ.НАИМ_КАТЕГОРИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_КАТЕГОРИИ\' в таблице \'КАТЕГОРИИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКАТЕГОРИИ.НАИМ_КАТЕГОРИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ПРИОРИТЕТНОСТЬ {
                get {
                    try {
                        return ((decimal)(this[this.tableКАТЕГОРИИ.ПРИОРИТЕТНОСТЬColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПРИОРИТЕТНОСТЬ\' в таблице \'КАТЕГОРИИ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableКАТЕГОРИИ.ПРИОРИТЕТНОСТЬColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_КАТЕГОРИИNull() {
                return this.IsNull(this.tableКАТЕГОРИИ.НАИМ_КАТЕГОРИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_КАТЕГОРИИNull() {
                this[this.tableКАТЕГОРИИ.НАИМ_КАТЕГОРИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsПРИОРИТЕТНОСТЬNull() {
                return this.IsNull(this.tableКАТЕГОРИИ.ПРИОРИТЕТНОСТЬColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetПРИОРИТЕТНОСТЬNull() {
                this[this.tableКАТЕГОРИИ.ПРИОРИТЕТНОСТЬColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow[] GetМАТПОМОЩЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018509"] == null)) {
                    return new МАТПОМОЩЬRow[0];
                }
                else {
                    return ((МАТПОМОЩЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018509"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class МАТПОМОЩЬRow : global::System.Data.DataRow {
            
            private МАТПОМОЩЬDataTable tableМАТПОМОЩЬ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal МАТПОМОЩЬRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableМАТПОМОЩЬ = ((МАТПОМОЩЬDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ЗАЯВЛЕНИЯ {
                get {
                    return ((decimal)(this[this.tableМАТПОМОЩЬ.ID_ЗАЯВЛЕНИЯColumn]));
                }
                set {
                    this[this.tableМАТПОМОЩЬ.ID_ЗАЯВЛЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМ_КУРСА {
                get {
                    try {
                        return ((decimal)(this[this.tableМАТПОМОЩЬ.НОМ_КУРСАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМ_КУРСА\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.НОМ_КУРСАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_ГРУППЫ {
                get {
                    try {
                        return ((string)(this[this.tableМАТПОМОЩЬ.НАИМ_ГРУППЫColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_ГРУППЫ\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.НАИМ_ГРУППЫColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ДАТА_ПОД_ЗАЯВЛЕНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableМАТПОМОЩЬ.ДАТА_ПОД_ЗАЯВЛЕНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_ПОД_ЗАЯВЛЕНИЯ\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.ДАТА_ПОД_ЗАЯВЛЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string СТАТУС {
                get {
                    try {
                        return ((string)(this[this.tableМАТПОМОЩЬ.СТАТУСColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СТАТУС\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.СТАТУСColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПОЛЬЗОВАТЕЛЯ {
                get {
                    try {
                        return ((decimal)(this[this.tableМАТПОМОЩЬ.ID_ПОЛЬЗОВАТЕЛЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_ПОЛЬЗОВАТЕЛЯ\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.ID_ПОЛЬЗОВАТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_КАТЕГОРИИ {
                get {
                    try {
                        return ((decimal)(this[this.tableМАТПОМОЩЬ.ID_КАТЕГОРИИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_КАТЕГОРИИ\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.ID_КАТЕГОРИИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ВЫПЛАТИЛИ {
                get {
                    try {
                        return ((decimal)(this[this.tableМАТПОМОЩЬ.ВЫПЛАТИЛИColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ВЫПЛАТИЛИ\' в таблице \'МАТПОМОЩЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableМАТПОМОЩЬ.ВЫПЛАТИЛИColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow ПОЛЬЗОВАТЕЛЬRow {
                get {
                    return ((ПОЛЬЗОВАТЕЛЬRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018508"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018508"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow КАТЕГОРИИRow {
                get {
                    return ((КАТЕГОРИИRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018509"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018509"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМ_КУРСАNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.НОМ_КУРСАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМ_КУРСАNull() {
                this[this.tableМАТПОМОЩЬ.НОМ_КУРСАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_ГРУППЫNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.НАИМ_ГРУППЫColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_ГРУППЫNull() {
                this[this.tableМАТПОМОЩЬ.НАИМ_ГРУППЫColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsДАТА_ПОД_ЗАЯВЛЕНИЯNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.ДАТА_ПОД_ЗАЯВЛЕНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetДАТА_ПОД_ЗАЯВЛЕНИЯNull() {
                this[this.tableМАТПОМОЩЬ.ДАТА_ПОД_ЗАЯВЛЕНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsСТАТУСNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.СТАТУСColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetСТАТУСNull() {
                this[this.tableМАТПОМОЩЬ.СТАТУСColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_ПОЛЬЗОВАТЕЛЯNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.ID_ПОЛЬЗОВАТЕЛЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_ПОЛЬЗОВАТЕЛЯNull() {
                this[this.tableМАТПОМОЩЬ.ID_ПОЛЬЗОВАТЕЛЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_КАТЕГОРИИNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.ID_КАТЕГОРИИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_КАТЕГОРИИNull() {
                this[this.tableМАТПОМОЩЬ.ID_КАТЕГОРИИColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsВЫПЛАТИЛИNull() {
                return this.IsNull(this.tableМАТПОМОЩЬ.ВЫПЛАТИЛИColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetВЫПЛАТИЛИNull() {
                this[this.tableМАТПОМОЩЬ.ВЫПЛАТИЛИColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПАСПОРТАRow : global::System.Data.DataRow {
            
            private ПАСПОРТАDataTable tableПАСПОРТА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПАСПОРТАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПАСПОРТА = ((ПАСПОРТАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПАСПОРТА {
                get {
                    return ((decimal)(this[this.tableПАСПОРТА.ID_ПАСПОРТАColumn]));
                }
                set {
                    this[this.tableПАСПОРТА.ID_ПАСПОРТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal СЕРИЯ {
                get {
                    try {
                        return ((decimal)(this[this.tableПАСПОРТА.СЕРИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'СЕРИЯ\' в таблице \'ПАСПОРТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАСПОРТА.СЕРИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМЕР {
                get {
                    try {
                        return ((decimal)(this[this.tableПАСПОРТА.НОМЕРColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР\' в таблице \'ПАСПОРТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАСПОРТА.НОМЕРColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string КЕМ_ВЫДАН {
                get {
                    try {
                        return ((string)(this[this.tableПАСПОРТА.КЕМ_ВЫДАНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КЕМ_ВЫДАН\' в таблице \'ПАСПОРТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАСПОРТА.КЕМ_ВЫДАНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime КОГДА_ВЫДАН {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПАСПОРТА.КОГДА_ВЫДАНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОГДА_ВЫДАН\' в таблице \'ПАСПОРТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАСПОРТА.КОГДА_ВЫДАНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ЗАРЕГИСТРИРОВАН {
                get {
                    try {
                        return ((string)(this[this.tableПАСПОРТА.ЗАРЕГИСТРИРОВАНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЗАРЕГИСТРИРОВАН\' в таблице \'ПАСПОРТА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПАСПОРТА.ЗАРЕГИСТРИРОВАНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsСЕРИЯNull() {
                return this.IsNull(this.tableПАСПОРТА.СЕРИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetСЕРИЯNull() {
                this[this.tableПАСПОРТА.СЕРИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМЕРNull() {
                return this.IsNull(this.tableПАСПОРТА.НОМЕРColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМЕРNull() {
                this[this.tableПАСПОРТА.НОМЕРColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsКЕМ_ВЫДАНNull() {
                return this.IsNull(this.tableПАСПОРТА.КЕМ_ВЫДАНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetКЕМ_ВЫДАНNull() {
                this[this.tableПАСПОРТА.КЕМ_ВЫДАНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsКОГДА_ВЫДАНNull() {
                return this.IsNull(this.tableПАСПОРТА.КОГДА_ВЫДАНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetКОГДА_ВЫДАНNull() {
                this[this.tableПАСПОРТА.КОГДА_ВЫДАНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsЗАРЕГИСТРИРОВАНNull() {
                return this.IsNull(this.tableПАСПОРТА.ЗАРЕГИСТРИРОВАНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetЗАРЕГИСТРИРОВАНNull() {
                this[this.tableПАСПОРТА.ЗАРЕГИСТРИРОВАНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow[] GetПОЛЬЗОВАТЕЛЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018503"] == null)) {
                    return new ПОЛЬЗОВАТЕЛЬRow[0];
                }
                else {
                    return ((ПОЛЬЗОВАТЕЛЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018503"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПОЛЬЗОВАТЕЛЬRow : global::System.Data.DataRow {
            
            private ПОЛЬЗОВАТЕЛЬDataTable tableПОЛЬЗОВАТЕЛЬ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПОЛЬЗОВАТЕЛЬRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПОЛЬЗОВАТЕЛЬ = ((ПОЛЬЗОВАТЕЛЬDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПОЛЬЗОВАТЕЛЯ {
                get {
                    return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПОЛЬЗОВАТЕЛЯColumn]));
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПОЛЬЗОВАТЕЛЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ФИО {
                get {
                    try {
                        return ((string)(this[this.tableПОЛЬЗОВАТЕЛЬ.ФИОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ФИО\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ФИОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ПОЛ {
                get {
                    try {
                        return ((string)(this[this.tableПОЛЬЗОВАТЕЛЬ.ПОЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПОЛ\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ПОЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ПАРОЛЬ {
                get {
                    try {
                        return ((string)(this[this.tableПОЛЬЗОВАТЕЛЬ.ПАРОЛЬColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ПАРОЛЬ\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ПАРОЛЬColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string ЛОГИН {
                get {
                    try {
                        return ((string)(this[this.tableПОЛЬЗОВАТЕЛЬ.ЛОГИНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ЛОГИН\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ЛОГИНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМ_ИНН {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ИННColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМ_ИНН\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ИННColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string АББРЕВ_ИНСТИТУТА {
                get {
                    try {
                        return ((string)(this[this.tableПОЛЬЗОВАТЕЛЬ.АББРЕВ_ИНСТИТУТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'АББРЕВ_ИНСТИТУТА\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.АББРЕВ_ИНСТИТУТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМ_ТЕЛ {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ТЕЛColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМ_ТЕЛ\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ТЕЛColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ДАТА_РОЖДЕНИЯ {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПОЛЬЗОВАТЕЛЬ.ДАТА_РОЖДЕНИЯColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ДАТА_РОЖДЕНИЯ\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ДАТА_РОЖДЕНИЯColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ТИПА_ПОЛЬЗ {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ТИПА_ПОЛЬЗColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_ТИПА_ПОЛЬЗ\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ТИПА_ПОЛЬЗColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПАСПОРТА {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПАСПОРТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_ПАСПОРТА\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПАСПОРТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_РЕКВИЗ_БАНКА {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.ID_РЕКВИЗ_БАНКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_РЕКВИЗ_БАНКА\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ID_РЕКВИЗ_БАНКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПРОФ_БИЛЕТА {
                get {
                    try {
                        return ((decimal)(this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПРОФ_БИЛЕТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ID_ПРОФ_БИЛЕТА\' в таблице \'ПОЛЬЗОВАТЕЛЬ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПРОФ_БИЛЕТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow {
                get {
                    return ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018502"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018502"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow ПАСПОРТАRow {
                get {
                    return ((ПАСПОРТАRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018503"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018503"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow РЕКВИЗИТЫ_БАНКАRow {
                get {
                    return ((РЕКВИЗИТЫ_БАНКАRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018504"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018504"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow ПРОФ_БИЛЕТЫRow {
                get {
                    return ((ПРОФ_БИЛЕТЫRow)(this.GetParentRow(this.Table.ParentRelations["SYS_C0018505"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["SYS_C0018505"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsФИОNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ФИОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetФИОNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ФИОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsПОЛNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ПОЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetПОЛNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ПОЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsПАРОЛЬNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ПАРОЛЬColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetПАРОЛЬNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ПАРОЛЬColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsЛОГИНNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ЛОГИНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetЛОГИНNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ЛОГИНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМ_ИННNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ИННColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМ_ИННNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ИННColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsАББРЕВ_ИНСТИТУТАNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.АББРЕВ_ИНСТИТУТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetАББРЕВ_ИНСТИТУТАNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.АББРЕВ_ИНСТИТУТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМ_ТЕЛNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ТЕЛColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМ_ТЕЛNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.НОМ_ТЕЛColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsДАТА_РОЖДЕНИЯNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ДАТА_РОЖДЕНИЯColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetДАТА_РОЖДЕНИЯNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ДАТА_РОЖДЕНИЯColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_ТИПА_ПОЛЬЗNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ID_ТИПА_ПОЛЬЗColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_ТИПА_ПОЛЬЗNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ТИПА_ПОЛЬЗColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_ПАСПОРТАNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ID_ПАСПОРТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_ПАСПОРТАNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПАСПОРТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_РЕКВИЗ_БАНКАNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ID_РЕКВИЗ_БАНКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_РЕКВИЗ_БАНКАNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ID_РЕКВИЗ_БАНКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsID_ПРОФ_БИЛЕТАNull() {
                return this.IsNull(this.tableПОЛЬЗОВАТЕЛЬ.ID_ПРОФ_БИЛЕТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetID_ПРОФ_БИЛЕТАNull() {
                this[this.tableПОЛЬЗОВАТЕЛЬ.ID_ПРОФ_БИЛЕТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow[] GetДОКУМЕНТЫRows() {
                if ((this.Table.ChildRelations["SYS_C0018512"] == null)) {
                    return new ДОКУМЕНТЫRow[0];
                }
                else {
                    return ((ДОКУМЕНТЫRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018512"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow[] GetМАТПОМОЩЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018508"] == null)) {
                    return new МАТПОМОЩЬRow[0];
                }
                else {
                    return ((МАТПОМОЩЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018508"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ПРОФ_БИЛЕТЫRow : global::System.Data.DataRow {
            
            private ПРОФ_БИЛЕТЫDataTable tableПРОФ_БИЛЕТЫ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ПРОФ_БИЛЕТЫRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableПРОФ_БИЛЕТЫ = ((ПРОФ_БИЛЕТЫDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ПРОФ_БИЛЕТА {
                get {
                    return ((decimal)(this[this.tableПРОФ_БИЛЕТЫ.ID_ПРОФ_БИЛЕТАColumn]));
                }
                set {
                    this[this.tableПРОФ_БИЛЕТЫ.ID_ПРОФ_БИЛЕТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМЕР_БИЛЕТА {
                get {
                    try {
                        return ((decimal)(this[this.tableПРОФ_БИЛЕТЫ.НОМЕР_БИЛЕТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМЕР_БИЛЕТА\' в таблице \'ПРОФ_БИЛЕТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПРОФ_БИЛЕТЫ.НОМЕР_БИЛЕТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime КОГДА_ВЫДАН {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableПРОФ_БИЛЕТЫ.КОГДА_ВЫДАНColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОГДА_ВЫДАН\' в таблице \'ПРОФ_БИЛЕТЫ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableПРОФ_БИЛЕТЫ.КОГДА_ВЫДАНColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМЕР_БИЛЕТАNull() {
                return this.IsNull(this.tableПРОФ_БИЛЕТЫ.НОМЕР_БИЛЕТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМЕР_БИЛЕТАNull() {
                this[this.tableПРОФ_БИЛЕТЫ.НОМЕР_БИЛЕТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsКОГДА_ВЫДАНNull() {
                return this.IsNull(this.tableПРОФ_БИЛЕТЫ.КОГДА_ВЫДАНColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetКОГДА_ВЫДАНNull() {
                this[this.tableПРОФ_БИЛЕТЫ.КОГДА_ВЫДАНColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow[] GetПОЛЬЗОВАТЕЛЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018505"] == null)) {
                    return new ПОЛЬЗОВАТЕЛЬRow[0];
                }
                else {
                    return ((ПОЛЬЗОВАТЕЛЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018505"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class РЕКВИЗИТЫ_БАНКАRow : global::System.Data.DataRow {
            
            private РЕКВИЗИТЫ_БАНКАDataTable tableРЕКВИЗИТЫ_БАНКА;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal РЕКВИЗИТЫ_БАНКАRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableРЕКВИЗИТЫ_БАНКА = ((РЕКВИЗИТЫ_БАНКАDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_РЕКВИЗ_БАНКА {
                get {
                    return ((decimal)(this[this.tableРЕКВИЗИТЫ_БАНКА.ID_РЕКВИЗ_БАНКАColumn]));
                }
                set {
                    this[this.tableРЕКВИЗИТЫ_БАНКА.ID_РЕКВИЗ_БАНКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_БАНКА {
                get {
                    try {
                        return ((string)(this[this.tableРЕКВИЗИТЫ_БАНКА.НАИМ_БАНКАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_БАНКА\' в таблице \'РЕКВИЗИТЫ_БАНКА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРЕКВИЗИТЫ_БАНКА.НАИМ_БАНКАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal НОМ_ЛИЦ_СЧЁТА {
                get {
                    try {
                        return ((decimal)(this[this.tableРЕКВИЗИТЫ_БАНКА.НОМ_ЛИЦ_СЧЁТАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НОМ_ЛИЦ_СЧЁТА\' в таблице \'РЕКВИЗИТЫ_БАНКА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРЕКВИЗИТЫ_БАНКА.НОМ_ЛИЦ_СЧЁТАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal БИК {
                get {
                    try {
                        return ((decimal)(this[this.tableРЕКВИЗИТЫ_БАНКА.БИКColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'БИК\' в таблице \'РЕКВИЗИТЫ_БАНКА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРЕКВИЗИТЫ_БАНКА.БИКColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public System.DateTime ГОДЕН_ДО {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tableРЕКВИЗИТЫ_БАНКА.ГОДЕН_ДОColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'ГОДЕН_ДО\' в таблице \'РЕКВИЗИТЫ_БАНКА\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableРЕКВИЗИТЫ_БАНКА.ГОДЕН_ДОColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_БАНКАNull() {
                return this.IsNull(this.tableРЕКВИЗИТЫ_БАНКА.НАИМ_БАНКАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_БАНКАNull() {
                this[this.tableРЕКВИЗИТЫ_БАНКА.НАИМ_БАНКАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНОМ_ЛИЦ_СЧЁТАNull() {
                return this.IsNull(this.tableРЕКВИЗИТЫ_БАНКА.НОМ_ЛИЦ_СЧЁТАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНОМ_ЛИЦ_СЧЁТАNull() {
                this[this.tableРЕКВИЗИТЫ_БАНКА.НОМ_ЛИЦ_СЧЁТАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsБИКNull() {
                return this.IsNull(this.tableРЕКВИЗИТЫ_БАНКА.БИКColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetБИКNull() {
                this[this.tableРЕКВИЗИТЫ_БАНКА.БИКColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsГОДЕН_ДОNull() {
                return this.IsNull(this.tableРЕКВИЗИТЫ_БАНКА.ГОДЕН_ДОColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetГОДЕН_ДОNull() {
                this[this.tableРЕКВИЗИТЫ_БАНКА.ГОДЕН_ДОColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow[] GetПОЛЬЗОВАТЕЛЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018504"] == null)) {
                    return new ПОЛЬЗОВАТЕЛЬRow[0];
                }
                else {
                    return ((ПОЛЬЗОВАТЕЛЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018504"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow : global::System.Data.DataRow {
            
            private ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ = ((ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public decimal ID_ТИПА_ПОЛЬЗ {
                get {
                    return ((decimal)(this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.ID_ТИПА_ПОЛЬЗColumn]));
                }
                set {
                    this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.ID_ТИПА_ПОЛЬЗColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string НАИМ_ПОЛЬЗ {
                get {
                    try {
                        return ((string)(this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.НАИМ_ПОЛЬЗColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'НАИМ_ПОЛЬЗ\' в таблице \'ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.НАИМ_ПОЛЬЗColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public string КОД_ДОСТУПА {
                get {
                    try {
                        return ((string)(this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.КОД_ДОСТУПАColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("Значение для столбца \'КОД_ДОСТУПА\' в таблице \'ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ\' равно DBNull.", e);
                    }
                }
                set {
                    this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.КОД_ДОСТУПАColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsНАИМ_ПОЛЬЗNull() {
                return this.IsNull(this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.НАИМ_ПОЛЬЗColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetНАИМ_ПОЛЬЗNull() {
                this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.НАИМ_ПОЛЬЗColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public bool IsКОД_ДОСТУПАNull() {
                return this.IsNull(this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.КОД_ДОСТУПАColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public void SetКОД_ДОСТУПАNull() {
                this[this.tableТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.КОД_ДОСТУПАColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow[] GetПОЛЬЗОВАТЕЛЬRows() {
                if ((this.Table.ChildRelations["SYS_C0018502"] == null)) {
                    return new ПОЛЬЗОВАТЕЛЬRow[0];
                }
                else {
                    return ((ПОЛЬЗОВАТЕЛЬRow[])(base.GetChildRows(this.Table.ChildRelations["SYS_C0018502"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class АДРЕСА_ДОКУМЕНТОВRowChangeEvent : global::System.EventArgs {
            
            private АДРЕСА_ДОКУМЕНТОВRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRowChangeEvent(АДРЕСА_ДОКУМЕНТОВRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public АДРЕСА_ДОКУМЕНТОВRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ДОКУМЕНТЫRowChangeEvent : global::System.EventArgs {
            
            private ДОКУМЕНТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRowChangeEvent(ДОКУМЕНТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ДОКУМЕНТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class КАТЕГОРИИRowChangeEvent : global::System.EventArgs {
            
            private КАТЕГОРИИRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRowChangeEvent(КАТЕГОРИИRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public КАТЕГОРИИRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class МАТПОМОЩЬRowChangeEvent : global::System.EventArgs {
            
            private МАТПОМОЩЬRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRowChangeEvent(МАТПОМОЩЬRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public МАТПОМОЩЬRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПАСПОРТАRowChangeEvent : global::System.EventArgs {
            
            private ПАСПОРТАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRowChangeEvent(ПАСПОРТАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПАСПОРТАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПОЛЬЗОВАТЕЛЬRowChangeEvent : global::System.EventArgs {
            
            private ПОЛЬЗОВАТЕЛЬRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRowChangeEvent(ПОЛЬЗОВАТЕЛЬRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПОЛЬЗОВАТЕЛЬRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ПРОФ_БИЛЕТЫRowChangeEvent : global::System.EventArgs {
            
            private ПРОФ_БИЛЕТЫRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRowChangeEvent(ПРОФ_БИЛЕТЫRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ПРОФ_БИЛЕТЫRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class РЕКВИЗИТЫ_БАНКАRowChangeEvent : global::System.EventArgs {
            
            private РЕКВИЗИТЫ_БАНКАRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRowChangeEvent(РЕКВИЗИТЫ_БАНКАRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public РЕКВИЗИТЫ_БАНКАRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public class ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent : global::System.EventArgs {
            
            private ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRowChangeEvent(ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Курсовая_работа.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class АДРЕСА_ДОКУМЕНТОВTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public АДРЕСА_ДОКУМЕНТОВTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "АДРЕСА_ДОКУМЕНТОВ";
            tableMapping.ColumnMappings.Add("ID_АДРЕСА", "ID_АДРЕСА");
            tableMapping.ColumnMappings.Add("НАИМ_ПАПКИ", "НАИМ_ПАПКИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = "DELETE FROM \"OE\".\"АДРЕСА_ДОКУМЕНТОВ\" WHERE ((\"ID_АДРЕСА\" = :Original_ID_АДРЕСА) A" +
                "ND ((:IsNull_НАИМ_ПАПКИ = 1 AND \"НАИМ_ПАПКИ\" IS NULL) OR (\"НАИМ_ПАПКИ\" = :Origin" +
                "al_НАИМ_ПАПКИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_АДРЕСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_АДРЕСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ПАПКИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ПАПКИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"АДРЕСА_ДОКУМЕНТОВ\" (\"ID_АДРЕСА\", \"НАИМ_ПАПКИ\") VALUES (:ID_АДРЕ" +
                "СА, :НАИМ_ПАПКИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_АДРЕСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_АДРЕСА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ПАПКИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"OE\".\"АДРЕСА_ДОКУМЕНТОВ\" SET \"ID_АДРЕСА\" = :ID_АДРЕСА, \"НАИМ_ПАПКИ\" = :НАИ" +
                "М_ПАПКИ WHERE ((\"ID_АДРЕСА\" = :Original_ID_АДРЕСА) AND ((:IsNull_НАИМ_ПАПКИ = 1 " +
                "AND \"НАИМ_ПАПКИ\" IS NULL) OR (\"НАИМ_ПАПКИ\" = :Original_НАИМ_ПАПКИ)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_АДРЕСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_АДРЕСА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ПАПКИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_АДРЕСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_АДРЕСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ПАПКИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ПАПКИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПАПКИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_АДРЕСА, НАИМ_ПАПКИ FROM OE.АДРЕСА_ДОКУМЕНТОВ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.АДРЕСА_ДОКУМЕНТОВDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.АДРЕСА_ДОКУМЕНТОВDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.АДРЕСА_ДОКУМЕНТОВDataTable dataTable = new DataSet1.АДРЕСА_ДОКУМЕНТОВDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.АДРЕСА_ДОКУМЕНТОВDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "АДРЕСА_ДОКУМЕНТОВ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_АДРЕСА, string Original_НАИМ_ПАПКИ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_АДРЕСА));
            if ((Original_НАИМ_ПАПКИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМ_ПАПКИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_АДРЕСА, string НАИМ_ПАПКИ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_АДРЕСА));
            if ((НАИМ_ПАПКИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМ_ПАПКИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_АДРЕСА, string НАИМ_ПАПКИ, decimal Original_ID_АДРЕСА, string Original_НАИМ_ПАПКИ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_АДРЕСА));
            if ((НАИМ_ПАПКИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМ_ПАПКИ));
            }
            this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(Original_ID_АДРЕСА));
            if ((Original_НАИМ_ПАПКИ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(Original_НАИМ_ПАПКИ));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМ_ПАПКИ, decimal Original_ID_АДРЕСА, string Original_НАИМ_ПАПКИ) {
            return this.Update(Original_ID_АДРЕСА, НАИМ_ПАПКИ, Original_ID_АДРЕСА, Original_НАИМ_ПАПКИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ДОКУМЕНТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ДОКУМЕНТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ДОКУМЕНТЫ";
            tableMapping.ColumnMappings.Add("НАИМ_ДОКУМЕНТА", "НАИМ_ДОКУМЕНТА");
            tableMapping.ColumnMappings.Add("ID_ПОЛЬЗОВАТЕЛЯ", "ID_ПОЛЬЗОВАТЕЛЯ");
            tableMapping.ColumnMappings.Add("ID_АДРЕСА", "ID_АДРЕСА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"ДОКУМЕНТЫ\" (\"НАИМ_ДОКУМЕНТА\", \"ID_ПОЛЬЗОВАТЕЛЯ\", \"ID_АДРЕСА\") V" +
                "ALUES (:НАИМ_ДОКУМЕНТА, :ID_ПОЛЬЗОВАТЕЛЯ, :ID_АДРЕСА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ДОКУМЕНТА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 30;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ДОКУМЕНТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_АДРЕСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_АДРЕСА";
            this._adapter.InsertCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT НАИМ_ДОКУМЕНТА, ID_ПОЛЬЗОВАТЕЛЯ, ID_АДРЕСА FROM OE.ДОКУМЕНТЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ДОКУМЕНТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ДОКУМЕНТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ДОКУМЕНТЫDataTable dataTable = new DataSet1.ДОКУМЕНТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ДОКУМЕНТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ДОКУМЕНТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(string НАИМ_ДОКУМЕНТА, global::System.Nullable<decimal> ID_ПОЛЬЗОВАТЕЛЯ, global::System.Nullable<decimal> ID_АДРЕСА) {
            if ((НАИМ_ДОКУМЕНТА == null)) {
                this.Adapter.InsertCommand.Parameters[0].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[0].Value = ((string)(НАИМ_ДОКУМЕНТА));
            }
            if ((ID_ПОЛЬЗОВАТЕЛЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(ID_ПОЛЬЗОВАТЕЛЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ID_АДРЕСА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ID_АДРЕСА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class КАТЕГОРИИTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public КАТЕГОРИИTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "КАТЕГОРИИ";
            tableMapping.ColumnMappings.Add("ID_КАТЕГОРИИ", "ID_КАТЕГОРИИ");
            tableMapping.ColumnMappings.Add("НАИМ_КАТЕГОРИИ", "НАИМ_КАТЕГОРИИ");
            tableMapping.ColumnMappings.Add("ПРИОРИТЕТНОСТЬ", "ПРИОРИТЕТНОСТЬ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""КАТЕГОРИИ"" WHERE ((""ID_КАТЕГОРИИ"" = :Original_ID_КАТЕГОРИИ) AND ((:IsNull_НАИМ_КАТЕГОРИИ = 1 AND ""НАИМ_КАТЕГОРИИ"" IS NULL) OR (""НАИМ_КАТЕГОРИИ"" = :Original_НАИМ_КАТЕГОРИИ)) AND ((:IsNull_ПРИОРИТЕТНОСТЬ = 1 AND ""ПРИОРИТЕТНОСТЬ"" IS NULL) OR (""ПРИОРИТЕТНОСТЬ"" = :Original_ПРИОРИТЕТНОСТЬ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_КАТЕГОРИИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"КАТЕГОРИИ\" (\"ID_КАТЕГОРИИ\", \"НАИМ_КАТЕГОРИИ\", \"ПРИОРИТЕТНОСТЬ\")" +
                " VALUES (:ID_КАТЕГОРИИ, :НАИМ_КАТЕГОРИИ, :ПРИОРИТЕТНОСТЬ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_КАТЕГОРИИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""КАТЕГОРИИ"" SET ""ID_КАТЕГОРИИ"" = :ID_КАТЕГОРИИ, ""НАИМ_КАТЕГОРИИ"" = :НАИМ_КАТЕГОРИИ, ""ПРИОРИТЕТНОСТЬ"" = :ПРИОРИТЕТНОСТЬ WHERE ((""ID_КАТЕГОРИИ"" = :Original_ID_КАТЕГОРИИ) AND ((:IsNull_НАИМ_КАТЕГОРИИ = 1 AND ""НАИМ_КАТЕГОРИИ"" IS NULL) OR (""НАИМ_КАТЕГОРИИ"" = :Original_НАИМ_КАТЕГОРИИ)) AND ((:IsNull_ПРИОРИТЕТНОСТЬ = 1 AND ""ПРИОРИТЕТНОСТЬ"" IS NULL) OR (""ПРИОРИТЕТНОСТЬ"" = :Original_ПРИОРИТЕТНОСТЬ)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_КАТЕГОРИИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_КАТЕГОРИИ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПРИОРИТЕТНОСТЬ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ПРИОРИТЕТНОСТЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_КАТЕГОРИИ, НАИМ_КАТЕГОРИИ, ПРИОРИТЕТНОСТЬ FROM OE.КАТЕГОРИИ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.КАТЕГОРИИDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.КАТЕГОРИИDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.КАТЕГОРИИDataTable dataTable = new DataSet1.КАТЕГОРИИDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.КАТЕГОРИИDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "КАТЕГОРИИ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_КАТЕГОРИИ, string Original_НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> Original_ПРИОРИТЕТНОСТЬ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_КАТЕГОРИИ));
            if ((Original_НАИМ_КАТЕГОРИИ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМ_КАТЕГОРИИ));
            }
            if ((Original_ПРИОРИТЕТНОСТЬ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_ПРИОРИТЕТНОСТЬ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_КАТЕГОРИИ, string НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> ПРИОРИТЕТНОСТЬ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_КАТЕГОРИИ));
            if ((НАИМ_КАТЕГОРИИ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМ_КАТЕГОРИИ));
            }
            if ((ПРИОРИТЕТНОСТЬ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(ПРИОРИТЕТНОСТЬ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_КАТЕГОРИИ, string НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> ПРИОРИТЕТНОСТЬ, decimal Original_ID_КАТЕГОРИИ, string Original_НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> Original_ПРИОРИТЕТНОСТЬ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_КАТЕГОРИИ));
            if ((НАИМ_КАТЕГОРИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМ_КАТЕГОРИИ));
            }
            if ((ПРИОРИТЕТНОСТЬ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(ПРИОРИТЕТНОСТЬ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_ID_КАТЕГОРИИ));
            if ((Original_НАИМ_КАТЕГОРИИ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_НАИМ_КАТЕГОРИИ));
            }
            if ((Original_ПРИОРИТЕТНОСТЬ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(Original_ПРИОРИТЕТНОСТЬ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> ПРИОРИТЕТНОСТЬ, decimal Original_ID_КАТЕГОРИИ, string Original_НАИМ_КАТЕГОРИИ, global::System.Nullable<decimal> Original_ПРИОРИТЕТНОСТЬ) {
            return this.Update(Original_ID_КАТЕГОРИИ, НАИМ_КАТЕГОРИИ, ПРИОРИТЕТНОСТЬ, Original_ID_КАТЕГОРИИ, Original_НАИМ_КАТЕГОРИИ, Original_ПРИОРИТЕТНОСТЬ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class МАТПОМОЩЬTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public МАТПОМОЩЬTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "МАТПОМОЩЬ";
            tableMapping.ColumnMappings.Add("ID_ЗАЯВЛЕНИЯ", "ID_ЗАЯВЛЕНИЯ");
            tableMapping.ColumnMappings.Add("НОМ_КУРСА", "НОМ_КУРСА");
            tableMapping.ColumnMappings.Add("НАИМ_ГРУППЫ", "НАИМ_ГРУППЫ");
            tableMapping.ColumnMappings.Add("ДАТА_ПОД_ЗАЯВЛЕНИЯ", "ДАТА_ПОД_ЗАЯВЛЕНИЯ");
            tableMapping.ColumnMappings.Add("СТАТУС", "СТАТУС");
            tableMapping.ColumnMappings.Add("ID_ПОЛЬЗОВАТЕЛЯ", "ID_ПОЛЬЗОВАТЕЛЯ");
            tableMapping.ColumnMappings.Add("ID_КАТЕГОРИИ", "ID_КАТЕГОРИИ");
            tableMapping.ColumnMappings.Add("ВЫПЛАТИЛИ", "ВЫПЛАТИЛИ");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""МАТПОМОЩЬ"" WHERE ((""ID_ЗАЯВЛЕНИЯ"" = :Original_ID_ЗАЯВЛЕНИЯ) AND ((:IsNull_НОМ_КУРСА = 1 AND ""НОМ_КУРСА"" IS NULL) OR (""НОМ_КУРСА"" = :Original_НОМ_КУРСА)) AND ((:IsNull_НАИМ_ГРУППЫ = 1 AND ""НАИМ_ГРУППЫ"" IS NULL) OR (""НАИМ_ГРУППЫ"" = :Original_НАИМ_ГРУППЫ)) AND ((:IsNull_ДАТА_ПОД_ЗАЯВЛЕНИЯ = 1 AND ""ДАТА_ПОД_ЗАЯВЛЕНИЯ"" IS NULL) OR (""ДАТА_ПОД_ЗАЯВЛЕНИЯ"" = :Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ)) AND ((:IsNull_СТАТУС = 1 AND ""СТАТУС"" IS NULL) OR (""СТАТУС"" = :Original_СТАТУС)) AND ((:IsNull_ID_ПОЛЬЗОВАТЕЛЯ = 1 AND ""ID_ПОЛЬЗОВАТЕЛЯ"" IS NULL) OR (""ID_ПОЛЬЗОВАТЕЛЯ"" = :Original_ID_ПОЛЬЗОВАТЕЛЯ)) AND ((:IsNull_ID_КАТЕГОРИИ = 1 AND ""ID_КАТЕГОРИИ"" IS NULL) OR (""ID_КАТЕГОРИИ"" = :Original_ID_КАТЕГОРИИ)) AND ((:IsNull_ВЫПЛАТИЛИ = 1 AND ""ВЫПЛАТИЛИ"" IS NULL) OR (""ВЫПЛАТИЛИ"" = :Original_ВЫПЛАТИЛИ)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ГРУППЫ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ГРУППЫ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_СТАТУС";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_СТАТУС";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""OE"".""МАТПОМОЩЬ"" (""ID_ЗАЯВЛЕНИЯ"", ""НОМ_КУРСА"", ""НАИМ_ГРУППЫ"", ""ДАТА_ПОД_ЗАЯВЛЕНИЯ"", ""СТАТУС"", ""ID_ПОЛЬЗОВАТЕЛЯ"", ""ID_КАТЕГОРИИ"", ""ВЫПЛАТИЛИ"") VALUES (:ID_ЗАЯВЛЕНИЯ, :НОМ_КУРСА, :НАИМ_ГРУППЫ, :ДАТА_ПОД_ЗАЯВЛЕНИЯ, :СТАТУС, :ID_ПОЛЬЗОВАТЕЛЯ, :ID_КАТЕГОРИИ, :ВЫПЛАТИЛИ)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ЗАЯВЛЕНИЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ГРУППЫ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "СТАТУС";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""МАТПОМОЩЬ"" SET ""ID_ЗАЯВЛЕНИЯ"" = :ID_ЗАЯВЛЕНИЯ, ""НОМ_КУРСА"" = :НОМ_КУРСА, ""НАИМ_ГРУППЫ"" = :НАИМ_ГРУППЫ, ""ДАТА_ПОД_ЗАЯВЛЕНИЯ"" = :ДАТА_ПОД_ЗАЯВЛЕНИЯ, ""СТАТУС"" = :СТАТУС, ""ID_ПОЛЬЗОВАТЕЛЯ"" = :ID_ПОЛЬЗОВАТЕЛЯ, ""ID_КАТЕГОРИИ"" = :ID_КАТЕГОРИИ, ""ВЫПЛАТИЛИ"" = :ВЫПЛАТИЛИ WHERE ((""ID_ЗАЯВЛЕНИЯ"" = :Original_ID_ЗАЯВЛЕНИЯ) AND ((:IsNull_НОМ_КУРСА = 1 AND ""НОМ_КУРСА"" IS NULL) OR (""НОМ_КУРСА"" = :Original_НОМ_КУРСА)) AND ((:IsNull_НАИМ_ГРУППЫ = 1 AND ""НАИМ_ГРУППЫ"" IS NULL) OR (""НАИМ_ГРУППЫ"" = :Original_НАИМ_ГРУППЫ)) AND ((:IsNull_ДАТА_ПОД_ЗАЯВЛЕНИЯ = 1 AND ""ДАТА_ПОД_ЗАЯВЛЕНИЯ"" IS NULL) OR (""ДАТА_ПОД_ЗАЯВЛЕНИЯ"" = :Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ)) AND ((:IsNull_СТАТУС = 1 AND ""СТАТУС"" IS NULL) OR (""СТАТУС"" = :Original_СТАТУС)) AND ((:IsNull_ID_ПОЛЬЗОВАТЕЛЯ = 1 AND ""ID_ПОЛЬЗОВАТЕЛЯ"" IS NULL) OR (""ID_ПОЛЬЗОВАТЕЛЯ"" = :Original_ID_ПОЛЬЗОВАТЕЛЯ)) AND ((:IsNull_ID_КАТЕГОРИИ = 1 AND ""ID_КАТЕГОРИИ"" IS NULL) OR (""ID_КАТЕГОРИИ"" = :Original_ID_КАТЕГОРИИ)) AND ((:IsNull_ВЫПЛАТИЛИ = 1 AND ""ВЫПЛАТИЛИ"" IS NULL) OR (""ВЫПЛАТИЛИ"" = :Original_ВЫПЛАТИЛИ)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ЗАЯВЛЕНИЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ГРУППЫ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "СТАТУС";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_КУРСА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_КУРСА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ГРУППЫ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ГРУППЫ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ГРУППЫ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_ПОД_ЗАЯВЛЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_СТАТУС";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_СТАТУС";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "СТАТУС";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_КАТЕГОРИИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_КАТЕГОРИИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ВЫПЛАТИЛИ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ВЫПЛАТИЛИ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ЗАЯВЛЕНИЯ, НОМ_КУРСА, НАИМ_ГРУППЫ, ДАТА_ПОД_ЗАЯВЛЕНИЯ, СТАТУС, ID_ПОЛЬЗ" +
                "ОВАТЕЛЯ, ID_КАТЕГОРИИ, ВЫПЛАТИЛИ FROM OE.МАТПОМОЩЬ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.МАТПОМОЩЬDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.МАТПОМОЩЬDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.МАТПОМОЩЬDataTable dataTable = new DataSet1.МАТПОМОЩЬDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.МАТПОМОЩЬDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "МАТПОМОЩЬ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_ЗАЯВЛЕНИЯ, global::System.Nullable<decimal> Original_НОМ_КУРСА, string Original_НАИМ_ГРУППЫ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ, string Original_СТАТУС, global::System.Nullable<decimal> Original_ID_ПОЛЬЗОВАТЕЛЯ, global::System.Nullable<decimal> Original_ID_КАТЕГОРИИ, global::System.Nullable<decimal> Original_ВЫПЛАТИЛИ) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ЗАЯВЛЕНИЯ));
            if ((Original_НОМ_КУРСА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_НОМ_КУРСА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_НАИМ_ГРУППЫ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_НАИМ_ГРУППЫ));
            }
            if ((Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((System.DateTime)(Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_СТАТУС == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_СТАТУС));
            }
            if ((Original_ID_ПОЛЬЗОВАТЕЛЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_ID_ПОЛЬЗОВАТЕЛЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_КАТЕГОРИИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((decimal)(Original_ID_КАТЕГОРИИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            if ((Original_ВЫПЛАТИЛИ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_ВЫПЛАТИЛИ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_ЗАЯВЛЕНИЯ, global::System.Nullable<decimal> НОМ_КУРСА, string НАИМ_ГРУППЫ, global::System.Nullable<global::System.DateTime> ДАТА_ПОД_ЗАЯВЛЕНИЯ, string СТАТУС, global::System.Nullable<decimal> ID_ПОЛЬЗОВАТЕЛЯ, global::System.Nullable<decimal> ID_КАТЕГОРИИ, global::System.Nullable<decimal> ВЫПЛАТИЛИ) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_ЗАЯВЛЕНИЯ));
            if ((НОМ_КУРСА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(НОМ_КУРСА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((НАИМ_ГРУППЫ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(НАИМ_ГРУППЫ));
            }
            if ((ДАТА_ПОД_ЗАЯВЛЕНИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((System.DateTime)(ДАТА_ПОД_ЗАЯВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((СТАТУС == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(СТАТУС));
            }
            if ((ID_ПОЛЬЗОВАТЕЛЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(ID_ПОЛЬЗОВАТЕЛЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ID_КАТЕГОРИИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[6].Value = ((decimal)(ID_КАТЕГОРИИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ВЫПЛАТИЛИ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(ВЫПЛАТИЛИ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID_ЗАЯВЛЕНИЯ, 
                    global::System.Nullable<decimal> НОМ_КУРСА, 
                    string НАИМ_ГРУППЫ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_ПОД_ЗАЯВЛЕНИЯ, 
                    string СТАТУС, 
                    global::System.Nullable<decimal> ID_ПОЛЬЗОВАТЕЛЯ, 
                    global::System.Nullable<decimal> ID_КАТЕГОРИИ, 
                    global::System.Nullable<decimal> ВЫПЛАТИЛИ, 
                    decimal Original_ID_ЗАЯВЛЕНИЯ, 
                    global::System.Nullable<decimal> Original_НОМ_КУРСА, 
                    string Original_НАИМ_ГРУППЫ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ, 
                    string Original_СТАТУС, 
                    global::System.Nullable<decimal> Original_ID_ПОЛЬЗОВАТЕЛЯ, 
                    global::System.Nullable<decimal> Original_ID_КАТЕГОРИИ, 
                    global::System.Nullable<decimal> Original_ВЫПЛАТИЛИ) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_ЗАЯВЛЕНИЯ));
            if ((НОМ_КУРСА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(НОМ_КУРСА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((НАИМ_ГРУППЫ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(НАИМ_ГРУППЫ));
            }
            if ((ДАТА_ПОД_ЗАЯВЛЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((System.DateTime)(ДАТА_ПОД_ЗАЯВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((СТАТУС == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(СТАТУС));
            }
            if ((ID_ПОЛЬЗОВАТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(ID_ПОЛЬЗОВАТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((ID_КАТЕГОРИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(ID_КАТЕГОРИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((ВЫПЛАТИЛИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(ВЫПЛАТИЛИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_ID_ЗАЯВЛЕНИЯ));
            if ((Original_НОМ_КУРСА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_НОМ_КУРСА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_НАИМ_ГРУППЫ == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_НАИМ_ГРУППЫ));
            }
            if ((Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_СТАТУС == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_СТАТУС));
            }
            if ((Original_ID_ПОЛЬЗОВАТЕЛЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[18].Value = ((decimal)(Original_ID_ПОЛЬЗОВАТЕЛЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_КАТЕГОРИИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[20].Value = ((decimal)(Original_ID_КАТЕГОРИИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ВЫПЛАТИЛИ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[22].Value = ((decimal)(Original_ВЫПЛАТИЛИ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> НОМ_КУРСА, string НАИМ_ГРУППЫ, global::System.Nullable<global::System.DateTime> ДАТА_ПОД_ЗАЯВЛЕНИЯ, string СТАТУС, global::System.Nullable<decimal> ID_ПОЛЬЗОВАТЕЛЯ, global::System.Nullable<decimal> ID_КАТЕГОРИИ, global::System.Nullable<decimal> ВЫПЛАТИЛИ, decimal Original_ID_ЗАЯВЛЕНИЯ, global::System.Nullable<decimal> Original_НОМ_КУРСА, string Original_НАИМ_ГРУППЫ, global::System.Nullable<global::System.DateTime> Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ, string Original_СТАТУС, global::System.Nullable<decimal> Original_ID_ПОЛЬЗОВАТЕЛЯ, global::System.Nullable<decimal> Original_ID_КАТЕГОРИИ, global::System.Nullable<decimal> Original_ВЫПЛАТИЛИ) {
            return this.Update(Original_ID_ЗАЯВЛЕНИЯ, НОМ_КУРСА, НАИМ_ГРУППЫ, ДАТА_ПОД_ЗАЯВЛЕНИЯ, СТАТУС, ID_ПОЛЬЗОВАТЕЛЯ, ID_КАТЕГОРИИ, ВЫПЛАТИЛИ, Original_ID_ЗАЯВЛЕНИЯ, Original_НОМ_КУРСА, Original_НАИМ_ГРУППЫ, Original_ДАТА_ПОД_ЗАЯВЛЕНИЯ, Original_СТАТУС, Original_ID_ПОЛЬЗОВАТЕЛЯ, Original_ID_КАТЕГОРИИ, Original_ВЫПЛАТИЛИ);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПАСПОРТАTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПАСПОРТАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПАСПОРТА";
            tableMapping.ColumnMappings.Add("ID_ПАСПОРТА", "ID_ПАСПОРТА");
            tableMapping.ColumnMappings.Add("СЕРИЯ", "СЕРИЯ");
            tableMapping.ColumnMappings.Add("НОМЕР", "НОМЕР");
            tableMapping.ColumnMappings.Add("КЕМ_ВЫДАН", "КЕМ_ВЫДАН");
            tableMapping.ColumnMappings.Add("КОГДА_ВЫДАН", "КОГДА_ВЫДАН");
            tableMapping.ColumnMappings.Add("ЗАРЕГИСТРИРОВАН", "ЗАРЕГИСТРИРОВАН");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""ПАСПОРТА"" WHERE ((""ID_ПАСПОРТА"" = :Original_ID_ПАСПОРТА) AND ((:IsNull_СЕРИЯ = 1 AND ""СЕРИЯ"" IS NULL) OR (""СЕРИЯ"" = :Original_СЕРИЯ)) AND ((:IsNull_НОМЕР = 1 AND ""НОМЕР"" IS NULL) OR (""НОМЕР"" = :Original_НОМЕР)) AND ((:IsNull_КЕМ_ВЫДАН = 1 AND ""КЕМ_ВЫДАН"" IS NULL) OR (""КЕМ_ВЫДАН"" = :Original_КЕМ_ВЫДАН)) AND ((:IsNull_КОГДА_ВЫДАН = 1 AND ""КОГДА_ВЫДАН"" IS NULL) OR (""КОГДА_ВЫДАН"" = :Original_КОГДА_ВЫДАН)) AND ((:IsNull_ЗАРЕГИСТРИРОВАН = 1 AND ""ЗАРЕГИСТРИРОВАН"" IS NULL) OR (""ЗАРЕГИСТРИРОВАН"" = :Original_ЗАРЕГИСТРИРОВАН)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_СЕРИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_СЕРИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМЕР";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМЕР";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КЕМ_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КЕМ_ВЫДАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ЗАРЕГИСТРИРОВАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ЗАРЕГИСТРИРОВАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"ПАСПОРТА\" (\"ID_ПАСПОРТА\", \"СЕРИЯ\", \"НОМЕР\", \"КЕМ_ВЫДАН\", \"КОГДА" +
                "_ВЫДАН\", \"ЗАРЕГИСТРИРОВАН\") VALUES (:ID_ПАСПОРТА, :СЕРИЯ, :НОМЕР, :КЕМ_ВЫДАН, :К" +
                "ОГДА_ВЫДАН, :ЗАРЕГИСТРИРОВАН)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "СЕРИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМЕР";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КЕМ_ВЫДАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ЗАРЕГИСТРИРОВАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""ПАСПОРТА"" SET ""ID_ПАСПОРТА"" = :ID_ПАСПОРТА, ""СЕРИЯ"" = :СЕРИЯ, ""НОМЕР"" = :НОМЕР, ""КЕМ_ВЫДАН"" = :КЕМ_ВЫДАН, ""КОГДА_ВЫДАН"" = :КОГДА_ВЫДАН, ""ЗАРЕГИСТРИРОВАН"" = :ЗАРЕГИСТРИРОВАН WHERE ((""ID_ПАСПОРТА"" = :Original_ID_ПАСПОРТА) AND ((:IsNull_СЕРИЯ = 1 AND ""СЕРИЯ"" IS NULL) OR (""СЕРИЯ"" = :Original_СЕРИЯ)) AND ((:IsNull_НОМЕР = 1 AND ""НОМЕР"" IS NULL) OR (""НОМЕР"" = :Original_НОМЕР)) AND ((:IsNull_КЕМ_ВЫДАН = 1 AND ""КЕМ_ВЫДАН"" IS NULL) OR (""КЕМ_ВЫДАН"" = :Original_КЕМ_ВЫДАН)) AND ((:IsNull_КОГДА_ВЫДАН = 1 AND ""КОГДА_ВЫДАН"" IS NULL) OR (""КОГДА_ВЫДАН"" = :Original_КОГДА_ВЫДАН)) AND ((:IsNull_ЗАРЕГИСТРИРОВАН = 1 AND ""ЗАРЕГИСТРИРОВАН"" IS NULL) OR (""ЗАРЕГИСТРИРОВАН"" = :Original_ЗАРЕГИСТРИРОВАН)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "СЕРИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМЕР";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КЕМ_ВЫДАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ЗАРЕГИСТРИРОВАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_СЕРИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_СЕРИЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "СЕРИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМЕР";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМЕР";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КЕМ_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КЕМ_ВЫДАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "КЕМ_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ЗАРЕГИСТРИРОВАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ЗАРЕГИСТРИРОВАН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 300;
            param.IsNullable = true;
            param.SourceColumn = "ЗАРЕГИСТРИРОВАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ПАСПОРТА, СЕРИЯ, НОМЕР, КЕМ_ВЫДАН, КОГДА_ВЫДАН, ЗАРЕГИСТРИРОВАН FROM OE" +
                ".ПАСПОРТА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ПАСПОРТАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ПАСПОРТАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ПАСПОРТАDataTable dataTable = new DataSet1.ПАСПОРТАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ПАСПОРТАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПАСПОРТА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_ПАСПОРТА, global::System.Nullable<decimal> Original_СЕРИЯ, global::System.Nullable<decimal> Original_НОМЕР, string Original_КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН, string Original_ЗАРЕГИСТРИРОВАН) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ПАСПОРТА));
            if ((Original_СЕРИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_СЕРИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_НОМЕР.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_НОМЕР.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_КЕМ_ВЫДАН == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_КЕМ_ВЫДАН));
            }
            if ((Original_КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_ЗАРЕГИСТРИРОВАН == null)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((string)(Original_ЗАРЕГИСТРИРОВАН));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_ПАСПОРТА, global::System.Nullable<decimal> СЕРИЯ, global::System.Nullable<decimal> НОМЕР, string КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН, string ЗАРЕГИСТРИРОВАН) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_ПАСПОРТА));
            if ((СЕРИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(СЕРИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((НОМЕР.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(НОМЕР.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((КЕМ_ВЫДАН == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(КЕМ_ВЫДАН));
            }
            if ((КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ЗАРЕГИСТРИРОВАН == null)) {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = ((string)(ЗАРЕГИСТРИРОВАН));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_ПАСПОРТА, global::System.Nullable<decimal> СЕРИЯ, global::System.Nullable<decimal> НОМЕР, string КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН, string ЗАРЕГИСТРИРОВАН, decimal Original_ID_ПАСПОРТА, global::System.Nullable<decimal> Original_СЕРИЯ, global::System.Nullable<decimal> Original_НОМЕР, string Original_КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН, string Original_ЗАРЕГИСТРИРОВАН) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_ПАСПОРТА));
            if ((СЕРИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(СЕРИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((НОМЕР.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(НОМЕР.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((КЕМ_ВЫДАН == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(КЕМ_ВЫДАН));
            }
            if ((КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((ЗАРЕГИСТРИРОВАН == null)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(ЗАРЕГИСТРИРОВАН));
            }
            this.Adapter.UpdateCommand.Parameters[6].Value = ((decimal)(Original_ID_ПАСПОРТА));
            if ((Original_СЕРИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[8].Value = ((decimal)(Original_СЕРИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((Original_НОМЕР.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(Original_НОМЕР.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_КЕМ_ВЫДАН == null)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[12].Value = ((string)(Original_КЕМ_ВЫДАН));
            }
            if ((Original_КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[14].Value = ((System.DateTime)(Original_КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ЗАРЕГИСТРИРОВАН == null)) {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[16].Value = ((string)(Original_ЗАРЕГИСТРИРОВАН));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> СЕРИЯ, global::System.Nullable<decimal> НОМЕР, string КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН, string ЗАРЕГИСТРИРОВАН, decimal Original_ID_ПАСПОРТА, global::System.Nullable<decimal> Original_СЕРИЯ, global::System.Nullable<decimal> Original_НОМЕР, string Original_КЕМ_ВЫДАН, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН, string Original_ЗАРЕГИСТРИРОВАН) {
            return this.Update(Original_ID_ПАСПОРТА, СЕРИЯ, НОМЕР, КЕМ_ВЫДАН, КОГДА_ВЫДАН, ЗАРЕГИСТРИРОВАН, Original_ID_ПАСПОРТА, Original_СЕРИЯ, Original_НОМЕР, Original_КЕМ_ВЫДАН, Original_КОГДА_ВЫДАН, Original_ЗАРЕГИСТРИРОВАН);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПОЛЬЗОВАТЕЛЬTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПОЛЬЗОВАТЕЛЬTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПОЛЬЗОВАТЕЛЬ";
            tableMapping.ColumnMappings.Add("ID_ПОЛЬЗОВАТЕЛЯ", "ID_ПОЛЬЗОВАТЕЛЯ");
            tableMapping.ColumnMappings.Add("ФИО", "ФИО");
            tableMapping.ColumnMappings.Add("ПОЛ", "ПОЛ");
            tableMapping.ColumnMappings.Add("ПАРОЛЬ", "ПАРОЛЬ");
            tableMapping.ColumnMappings.Add("ЛОГИН", "ЛОГИН");
            tableMapping.ColumnMappings.Add("НОМ_ИНН", "НОМ_ИНН");
            tableMapping.ColumnMappings.Add("АББРЕВ_ИНСТИТУТА", "АББРЕВ_ИНСТИТУТА");
            tableMapping.ColumnMappings.Add("НОМ_ТЕЛ", "НОМ_ТЕЛ");
            tableMapping.ColumnMappings.Add("ДАТА_РОЖДЕНИЯ", "ДАТА_РОЖДЕНИЯ");
            tableMapping.ColumnMappings.Add("ID_ТИПА_ПОЛЬЗ", "ID_ТИПА_ПОЛЬЗ");
            tableMapping.ColumnMappings.Add("ID_ПАСПОРТА", "ID_ПАСПОРТА");
            tableMapping.ColumnMappings.Add("ID_РЕКВИЗ_БАНКА", "ID_РЕКВИЗ_БАНКА");
            tableMapping.ColumnMappings.Add("ID_ПРОФ_БИЛЕТА", "ID_ПРОФ_БИЛЕТА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""ПОЛЬЗОВАТЕЛЬ"" WHERE ((""ID_ПОЛЬЗОВАТЕЛЯ"" = :Original_ID_ПОЛЬЗОВАТЕЛЯ) AND ((:IsNull_ФИО = 1 AND ""ФИО"" IS NULL) OR (""ФИО"" = :Original_ФИО)) AND ((:IsNull_ПОЛ = 1 AND ""ПОЛ"" IS NULL) OR (""ПОЛ"" = :Original_ПОЛ)) AND ((:IsNull_ПАРОЛЬ = 1 AND ""ПАРОЛЬ"" IS NULL) OR (""ПАРОЛЬ"" = :Original_ПАРОЛЬ)) AND ((:IsNull_ЛОГИН = 1 AND ""ЛОГИН"" IS NULL) OR (""ЛОГИН"" = :Original_ЛОГИН)) AND ((:IsNull_НОМ_ИНН = 1 AND ""НОМ_ИНН"" IS NULL) OR (""НОМ_ИНН"" = :Original_НОМ_ИНН)) AND ((:IsNull_АББРЕВ_ИНСТИТУТА = 1 AND ""АББРЕВ_ИНСТИТУТА"" IS NULL) OR (""АББРЕВ_ИНСТИТУТА"" = :Original_АББРЕВ_ИНСТИТУТА)) AND ((:IsNull_НОМ_ТЕЛ = 1 AND ""НОМ_ТЕЛ"" IS NULL) OR (""НОМ_ТЕЛ"" = :Original_НОМ_ТЕЛ)) AND ((:IsNull_ДАТА_РОЖДЕНИЯ = 1 AND ""ДАТА_РОЖДЕНИЯ"" IS NULL) OR (""ДАТА_РОЖДЕНИЯ"" = :Original_ДАТА_РОЖДЕНИЯ)) AND ((:IsNull_ID_ТИПА_ПОЛЬЗ = 1 AND ""ID_ТИПА_ПОЛЬЗ"" IS NULL) OR (""ID_ТИПА_ПОЛЬЗ"" = :Original_ID_ТИПА_ПОЛЬЗ)) AND ((:IsNull_ID_ПАСПОРТА = 1 AND ""ID_ПАСПОРТА"" IS NULL) OR (""ID_ПАСПОРТА"" = :Original_ID_ПАСПОРТА)) AND ((:IsNull_ID_РЕКВИЗ_БАНКА = 1 AND ""ID_РЕКВИЗ_БАНКА"" IS NULL) OR (""ID_РЕКВИЗ_БАНКА"" = :Original_ID_РЕКВИЗ_БАНКА)) AND ((:IsNull_ID_ПРОФ_БИЛЕТА = 1 AND ""ID_ПРОФ_БИЛЕТА"" IS NULL) OR (""ID_ПРОФ_БИЛЕТА"" = :Original_ID_ПРОФ_БИЛЕТА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ФИО";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ФИО";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПОЛ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПОЛ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПАРОЛЬ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПАРОЛЬ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ЛОГИН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ЛОГИН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_АББРЕВ_ИНСТИТУТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_АББРЕВ_ИНСТИТУТА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = @"INSERT INTO ""OE"".""ПОЛЬЗОВАТЕЛЬ"" (""ID_ПОЛЬЗОВАТЕЛЯ"", ""ФИО"", ""ПОЛ"", ""ПАРОЛЬ"", ""ЛОГИН"", ""НОМ_ИНН"", ""АББРЕВ_ИНСТИТУТА"", ""НОМ_ТЕЛ"", ""ДАТА_РОЖДЕНИЯ"", ""ID_ТИПА_ПОЛЬЗ"", ""ID_ПАСПОРТА"", ""ID_РЕКВИЗ_БАНКА"", ""ID_ПРОФ_БИЛЕТА"") VALUES (:ID_ПОЛЬЗОВАТЕЛЯ, :ФИО, :ПОЛ, :ПАРОЛЬ, :ЛОГИН, :НОМ_ИНН, :АББРЕВ_ИНСТИТУТА, :НОМ_ТЕЛ, :ДАТА_РОЖДЕНИЯ, :ID_ТИПА_ПОЛЬЗ, :ID_ПАСПОРТА, :ID_РЕКВИЗ_БАНКА, :ID_ПРОФ_БИЛЕТА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ФИО";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПОЛ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПАРОЛЬ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ЛОГИН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "АББРЕВ_ИНСТИТУТА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = "UPDATE \"OE\".\"ПОЛЬЗОВАТЕЛЬ\" SET \"ID_ПОЛЬЗОВАТЕЛЯ\" = :ID_ПОЛЬЗОВАТЕЛЯ, \"ФИО\" = :ФИО" +
                ", \"ПОЛ\" = :ПОЛ, \"ПАРОЛЬ\" = :ПАРОЛЬ, \"ЛОГИН\" = :ЛОГИН, \"НОМ_ИНН\" = :НОМ_ИНН, \"АББ" +
                "РЕВ_ИНСТИТУТА\" = :АББРЕВ_ИНСТИТУТА, \"НОМ_ТЕЛ\" = :НОМ_ТЕЛ, \"ДАТА_РОЖДЕНИЯ\" = :ДАТ" +
                "А_РОЖДЕНИЯ, \"ID_ТИПА_ПОЛЬЗ\" = :ID_ТИПА_ПОЛЬЗ, \"ID_ПАСПОРТА\" = :ID_ПАСПОРТА, \"ID_" +
                "РЕКВИЗ_БАНКА\" = :ID_РЕКВИЗ_БАНКА, \"ID_ПРОФ_БИЛЕТА\" = :ID_ПРОФ_БИЛЕТА WHERE ((\"ID" +
                "_ПОЛЬЗОВАТЕЛЯ\" = :Original_ID_ПОЛЬЗОВАТЕЛЯ) AND ((:IsNull_ФИО = 1 AND \"ФИО\" IS N" +
                "ULL) OR (\"ФИО\" = :Original_ФИО)) AND ((:IsNull_ПОЛ = 1 AND \"ПОЛ\" IS NULL) OR (\"П" +
                "ОЛ\" = :Original_ПОЛ)) AND ((:IsNull_ПАРОЛЬ = 1 AND \"ПАРОЛЬ\" IS NULL) OR (\"ПАРОЛЬ" +
                "\" = :Original_ПАРОЛЬ)) AND ((:IsNull_ЛОГИН = 1 AND \"ЛОГИН\" IS NULL) OR (\"ЛОГИН\" " +
                "= :Original_ЛОГИН)) AND ((:IsNull_НОМ_ИНН = 1 AND \"НОМ_ИНН\" IS NULL) OR (\"НОМ_ИН" +
                "Н\" = :Original_НОМ_ИНН)) AND ((:IsNull_АББРЕВ_ИНСТИТУТА = 1 AND \"АББРЕВ_ИНСТИТУТ" +
                "А\" IS NULL) OR (\"АББРЕВ_ИНСТИТУТА\" = :Original_АББРЕВ_ИНСТИТУТА)) AND ((:IsNull_" +
                "НОМ_ТЕЛ = 1 AND \"НОМ_ТЕЛ\" IS NULL) OR (\"НОМ_ТЕЛ\" = :Original_НОМ_ТЕЛ)) AND ((:Is" +
                "Null_ДАТА_РОЖДЕНИЯ = 1 AND \"ДАТА_РОЖДЕНИЯ\" IS NULL) OR (\"ДАТА_РОЖДЕНИЯ\" = :Origi" +
                "nal_ДАТА_РОЖДЕНИЯ)) AND ((:IsNull_ID_ТИПА_ПОЛЬЗ = 1 AND \"ID_ТИПА_ПОЛЬЗ\" IS NULL)" +
                " OR (\"ID_ТИПА_ПОЛЬЗ\" = :Original_ID_ТИПА_ПОЛЬЗ)) AND ((:IsNull_ID_ПАСПОРТА = 1 A" +
                "ND \"ID_ПАСПОРТА\" IS NULL) OR (\"ID_ПАСПОРТА\" = :Original_ID_ПАСПОРТА)) AND ((:IsN" +
                "ull_ID_РЕКВИЗ_БАНКА = 1 AND \"ID_РЕКВИЗ_БАНКА\" IS NULL) OR (\"ID_РЕКВИЗ_БАНКА\" = :" +
                "Original_ID_РЕКВИЗ_БАНКА)) AND ((:IsNull_ID_ПРОФ_БИЛЕТА = 1 AND \"ID_ПРОФ_БИЛЕТА\"" +
                " IS NULL) OR (\"ID_ПРОФ_БИЛЕТА\" = :Original_ID_ПРОФ_БИЛЕТА)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ФИО";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПОЛ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ПАРОЛЬ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ЛОГИН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "АББРЕВ_ИНСТИТУТА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПОЛЬЗОВАТЕЛЯ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПОЛЬЗОВАТЕЛЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ФИО";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ФИО";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 150;
            param.IsNullable = true;
            param.SourceColumn = "ФИО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПОЛ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПОЛ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 2;
            param.IsNullable = true;
            param.SourceColumn = "ПОЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ПАРОЛЬ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ПАРОЛЬ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ПАРОЛЬ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ЛОГИН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ЛОГИН";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "ЛОГИН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ИНН";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ИНН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_АББРЕВ_ИНСТИТУТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_АББРЕВ_ИНСТИТУТА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 10;
            param.IsNullable = true;
            param.SourceColumn = "АББРЕВ_ИНСТИТУТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ТЕЛ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ТЕЛ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ДАТА_РОЖДЕНИЯ";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ДАТА_РОЖДЕНИЯ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПАСПОРТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПАСПОРТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ПОЛЬЗОВАТЕЛЯ, ФИО, ПОЛ, ПАРОЛЬ, ЛОГИН, НОМ_ИНН, АББРЕВ_ИНСТИТУТА, НОМ_Т" +
                "ЕЛ, ДАТА_РОЖДЕНИЯ, ID_ТИПА_ПОЛЬЗ, ID_ПАСПОРТА, ID_РЕКВИЗ_БАНКА, ID_ПРОФ_БИЛЕТА F" +
                "ROM OE.ПОЛЬЗОВАТЕЛЬ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ПОЛЬЗОВАТЕЛЬDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ПОЛЬЗОВАТЕЛЬDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ПОЛЬЗОВАТЕЛЬDataTable dataTable = new DataSet1.ПОЛЬЗОВАТЕЛЬDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ПОЛЬЗОВАТЕЛЬDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПОЛЬЗОВАТЕЛЬ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_ПОЛЬЗОВАТЕЛЯ, string Original_ФИО, string Original_ПОЛ, string Original_ПАРОЛЬ, string Original_ЛОГИН, global::System.Nullable<decimal> Original_НОМ_ИНН, string Original_АББРЕВ_ИНСТИТУТА, global::System.Nullable<decimal> Original_НОМ_ТЕЛ, global::System.Nullable<global::System.DateTime> Original_ДАТА_РОЖДЕНИЯ, global::System.Nullable<decimal> Original_ID_ТИПА_ПОЛЬЗ, global::System.Nullable<decimal> Original_ID_ПАСПОРТА, global::System.Nullable<decimal> Original_ID_РЕКВИЗ_БАНКА, global::System.Nullable<decimal> Original_ID_ПРОФ_БИЛЕТА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ПОЛЬЗОВАТЕЛЯ));
            if ((Original_ФИО == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_ФИО));
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_ПАРОЛЬ == null)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((string)(Original_ПАРОЛЬ));
            }
            if ((Original_ЛОГИН == null)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((string)(Original_ЛОГИН));
            }
            if ((Original_НОМ_ИНН.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[10].Value = ((decimal)(Original_НОМ_ИНН.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[9].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((Original_АББРЕВ_ИНСТИТУТА == null)) {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[11].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[12].Value = ((string)(Original_АББРЕВ_ИНСТИТУТА));
            }
            if ((Original_НОМ_ТЕЛ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[14].Value = ((decimal)(Original_НОМ_ТЕЛ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[13].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[14].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_РОЖДЕНИЯ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[16].Value = ((System.DateTime)(Original_ДАТА_РОЖДЕНИЯ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[15].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[16].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ТИПА_ПОЛЬЗ.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[18].Value = ((decimal)(Original_ID_ТИПА_ПОЛЬЗ.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[17].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[18].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ПАСПОРТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[20].Value = ((decimal)(Original_ID_ПАСПОРТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[19].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[20].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_РЕКВИЗ_БАНКА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[22].Value = ((decimal)(Original_ID_РЕКВИЗ_БАНКА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[21].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[22].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ПРОФ_БИЛЕТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[24].Value = ((decimal)(Original_ID_ПРОФ_БИЛЕТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[23].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[24].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_ПОЛЬЗОВАТЕЛЯ, string ФИО, string ПОЛ, string ПАРОЛЬ, string ЛОГИН, global::System.Nullable<decimal> НОМ_ИНН, string АББРЕВ_ИНСТИТУТА, global::System.Nullable<decimal> НОМ_ТЕЛ, global::System.Nullable<global::System.DateTime> ДАТА_РОЖДЕНИЯ, global::System.Nullable<decimal> ID_ТИПА_ПОЛЬЗ, global::System.Nullable<decimal> ID_ПАСПОРТА, global::System.Nullable<decimal> ID_РЕКВИЗ_БАНКА, global::System.Nullable<decimal> ID_ПРОФ_БИЛЕТА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_ПОЛЬЗОВАТЕЛЯ));
            if ((ФИО == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((ПОЛ == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(ПОЛ));
            }
            if ((ПАРОЛЬ == null)) {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = ((string)(ПАРОЛЬ));
            }
            if ((ЛОГИН == null)) {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = ((string)(ЛОГИН));
            }
            if ((НОМ_ИНН.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[5].Value = ((decimal)(НОМ_ИНН.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((АББРЕВ_ИНСТИТУТА == null)) {
                this.Adapter.InsertCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[6].Value = ((string)(АББРЕВ_ИНСТИТУТА));
            }
            if ((НОМ_ТЕЛ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[7].Value = ((decimal)(НОМ_ТЕЛ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_РОЖДЕНИЯ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[8].Value = ((System.DateTime)(ДАТА_РОЖДЕНИЯ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ID_ТИПА_ПОЛЬЗ.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[9].Value = ((decimal)(ID_ТИПА_ПОЛЬЗ.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ID_ПАСПОРТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[10].Value = ((decimal)(ID_ПАСПОРТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ID_РЕКВИЗ_БАНКА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[11].Value = ((decimal)(ID_РЕКВИЗ_БАНКА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ID_ПРОФ_БИЛЕТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[12].Value = ((decimal)(ID_ПРОФ_БИЛЕТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    decimal ID_ПОЛЬЗОВАТЕЛЯ, 
                    string ФИО, 
                    string ПОЛ, 
                    string ПАРОЛЬ, 
                    string ЛОГИН, 
                    global::System.Nullable<decimal> НОМ_ИНН, 
                    string АББРЕВ_ИНСТИТУТА, 
                    global::System.Nullable<decimal> НОМ_ТЕЛ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_РОЖДЕНИЯ, 
                    global::System.Nullable<decimal> ID_ТИПА_ПОЛЬЗ, 
                    global::System.Nullable<decimal> ID_ПАСПОРТА, 
                    global::System.Nullable<decimal> ID_РЕКВИЗ_БАНКА, 
                    global::System.Nullable<decimal> ID_ПРОФ_БИЛЕТА, 
                    decimal Original_ID_ПОЛЬЗОВАТЕЛЯ, 
                    string Original_ФИО, 
                    string Original_ПОЛ, 
                    string Original_ПАРОЛЬ, 
                    string Original_ЛОГИН, 
                    global::System.Nullable<decimal> Original_НОМ_ИНН, 
                    string Original_АББРЕВ_ИНСТИТУТА, 
                    global::System.Nullable<decimal> Original_НОМ_ТЕЛ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_РОЖДЕНИЯ, 
                    global::System.Nullable<decimal> Original_ID_ТИПА_ПОЛЬЗ, 
                    global::System.Nullable<decimal> Original_ID_ПАСПОРТА, 
                    global::System.Nullable<decimal> Original_ID_РЕКВИЗ_БАНКА, 
                    global::System.Nullable<decimal> Original_ID_ПРОФ_БИЛЕТА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_ПОЛЬЗОВАТЕЛЯ));
            if ((ФИО == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(ФИО));
            }
            if ((ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(ПОЛ));
            }
            if ((ПАРОЛЬ == null)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((string)(ПАРОЛЬ));
            }
            if ((ЛОГИН == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((string)(ЛОГИН));
            }
            if ((НОМ_ИНН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(НОМ_ИНН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((АББРЕВ_ИНСТИТУТА == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((string)(АББРЕВ_ИНСТИТУТА));
            }
            if ((НОМ_ТЕЛ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[7].Value = ((decimal)(НОМ_ТЕЛ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            if ((ДАТА_РОЖДЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((System.DateTime)(ДАТА_РОЖДЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            if ((ID_ТИПА_ПОЛЬЗ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(ID_ТИПА_ПОЛЬЗ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((ID_ПАСПОРТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((decimal)(ID_ПАСПОРТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = global::System.DBNull.Value;
            }
            if ((ID_РЕКВИЗ_БАНКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(ID_РЕКВИЗ_БАНКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((ID_ПРОФ_БИЛЕТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((decimal)(ID_ПРОФ_БИЛЕТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[13].Value = ((decimal)(Original_ID_ПОЛЬЗОВАТЕЛЯ));
            if ((Original_ФИО == null)) {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[15].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[14].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[15].Value = ((string)(Original_ФИО));
            }
            if ((Original_ПОЛ == null)) {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[17].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[16].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[17].Value = ((string)(Original_ПОЛ));
            }
            if ((Original_ПАРОЛЬ == null)) {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[19].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[18].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[19].Value = ((string)(Original_ПАРОЛЬ));
            }
            if ((Original_ЛОГИН == null)) {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[21].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[20].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[21].Value = ((string)(Original_ЛОГИН));
            }
            if ((Original_НОМ_ИНН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[23].Value = ((decimal)(Original_НОМ_ИНН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[22].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[23].Value = global::System.DBNull.Value;
            }
            if ((Original_АББРЕВ_ИНСТИТУТА == null)) {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[25].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[24].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[25].Value = ((string)(Original_АББРЕВ_ИНСТИТУТА));
            }
            if ((Original_НОМ_ТЕЛ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[27].Value = ((decimal)(Original_НОМ_ТЕЛ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[26].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[27].Value = global::System.DBNull.Value;
            }
            if ((Original_ДАТА_РОЖДЕНИЯ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[29].Value = ((System.DateTime)(Original_ДАТА_РОЖДЕНИЯ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[28].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[29].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ТИПА_ПОЛЬЗ.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[31].Value = ((decimal)(Original_ID_ТИПА_ПОЛЬЗ.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[30].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[31].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ПАСПОРТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[33].Value = ((decimal)(Original_ID_ПАСПОРТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[32].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[33].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_РЕКВИЗ_БАНКА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[35].Value = ((decimal)(Original_ID_РЕКВИЗ_БАНКА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[34].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[35].Value = global::System.DBNull.Value;
            }
            if ((Original_ID_ПРОФ_БИЛЕТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[37].Value = ((decimal)(Original_ID_ПРОФ_БИЛЕТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[36].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[37].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(
                    string ФИО, 
                    string ПОЛ, 
                    string ПАРОЛЬ, 
                    string ЛОГИН, 
                    global::System.Nullable<decimal> НОМ_ИНН, 
                    string АББРЕВ_ИНСТИТУТА, 
                    global::System.Nullable<decimal> НОМ_ТЕЛ, 
                    global::System.Nullable<global::System.DateTime> ДАТА_РОЖДЕНИЯ, 
                    global::System.Nullable<decimal> ID_ТИПА_ПОЛЬЗ, 
                    global::System.Nullable<decimal> ID_ПАСПОРТА, 
                    global::System.Nullable<decimal> ID_РЕКВИЗ_БАНКА, 
                    global::System.Nullable<decimal> ID_ПРОФ_БИЛЕТА, 
                    decimal Original_ID_ПОЛЬЗОВАТЕЛЯ, 
                    string Original_ФИО, 
                    string Original_ПОЛ, 
                    string Original_ПАРОЛЬ, 
                    string Original_ЛОГИН, 
                    global::System.Nullable<decimal> Original_НОМ_ИНН, 
                    string Original_АББРЕВ_ИНСТИТУТА, 
                    global::System.Nullable<decimal> Original_НОМ_ТЕЛ, 
                    global::System.Nullable<global::System.DateTime> Original_ДАТА_РОЖДЕНИЯ, 
                    global::System.Nullable<decimal> Original_ID_ТИПА_ПОЛЬЗ, 
                    global::System.Nullable<decimal> Original_ID_ПАСПОРТА, 
                    global::System.Nullable<decimal> Original_ID_РЕКВИЗ_БАНКА, 
                    global::System.Nullable<decimal> Original_ID_ПРОФ_БИЛЕТА) {
            return this.Update(Original_ID_ПОЛЬЗОВАТЕЛЯ, ФИО, ПОЛ, ПАРОЛЬ, ЛОГИН, НОМ_ИНН, АББРЕВ_ИНСТИТУТА, НОМ_ТЕЛ, ДАТА_РОЖДЕНИЯ, ID_ТИПА_ПОЛЬЗ, ID_ПАСПОРТА, ID_РЕКВИЗ_БАНКА, ID_ПРОФ_БИЛЕТА, Original_ID_ПОЛЬЗОВАТЕЛЯ, Original_ФИО, Original_ПОЛ, Original_ПАРОЛЬ, Original_ЛОГИН, Original_НОМ_ИНН, Original_АББРЕВ_ИНСТИТУТА, Original_НОМ_ТЕЛ, Original_ДАТА_РОЖДЕНИЯ, Original_ID_ТИПА_ПОЛЬЗ, Original_ID_ПАСПОРТА, Original_ID_РЕКВИЗ_БАНКА, Original_ID_ПРОФ_БИЛЕТА);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ПРОФ_БИЛЕТЫTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ПРОФ_БИЛЕТЫTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ПРОФ_БИЛЕТЫ";
            tableMapping.ColumnMappings.Add("ID_ПРОФ_БИЛЕТА", "ID_ПРОФ_БИЛЕТА");
            tableMapping.ColumnMappings.Add("НОМЕР_БИЛЕТА", "НОМЕР_БИЛЕТА");
            tableMapping.ColumnMappings.Add("КОГДА_ВЫДАН", "КОГДА_ВЫДАН");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""ПРОФ_БИЛЕТЫ"" WHERE ((""ID_ПРОФ_БИЛЕТА"" = :Original_ID_ПРОФ_БИЛЕТА) AND ((:IsNull_НОМЕР_БИЛЕТА = 1 AND ""НОМЕР_БИЛЕТА"" IS NULL) OR (""НОМЕР_БИЛЕТА"" = :Original_НОМЕР_БИЛЕТА)) AND ((:IsNull_КОГДА_ВЫДАН = 1 AND ""КОГДА_ВЫДАН"" IS NULL) OR (""КОГДА_ВЫДАН"" = :Original_КОГДА_ВЫДАН)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"ПРОФ_БИЛЕТЫ\" (\"ID_ПРОФ_БИЛЕТА\", \"НОМЕР_БИЛЕТА\", \"КОГДА_ВЫДАН\") " +
                "VALUES (:ID_ПРОФ_БИЛЕТА, :НОМЕР_БИЛЕТА, :КОГДА_ВЫДАН)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""ПРОФ_БИЛЕТЫ"" SET ""ID_ПРОФ_БИЛЕТА"" = :ID_ПРОФ_БИЛЕТА, ""НОМЕР_БИЛЕТА"" = :НОМЕР_БИЛЕТА, ""КОГДА_ВЫДАН"" = :КОГДА_ВЫДАН WHERE ((""ID_ПРОФ_БИЛЕТА"" = :Original_ID_ПРОФ_БИЛЕТА) AND ((:IsNull_НОМЕР_БИЛЕТА = 1 AND ""НОМЕР_БИЛЕТА"" IS NULL) OR (""НОМЕР_БИЛЕТА"" = :Original_НОМЕР_БИЛЕТА)) AND ((:IsNull_КОГДА_ВЫДАН = 1 AND ""КОГДА_ВЫДАН"" IS NULL) OR (""КОГДА_ВЫДАН"" = :Original_КОГДА_ВЫДАН)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ПРОФ_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ПРОФ_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМЕР_БИЛЕТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМЕР_БИЛЕТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОГДА_ВЫДАН";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "КОГДА_ВЫДАН";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ПРОФ_БИЛЕТА, НОМЕР_БИЛЕТА, КОГДА_ВЫДАН FROM OE.ПРОФ_БИЛЕТЫ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ПРОФ_БИЛЕТЫDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ПРОФ_БИЛЕТЫDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ПРОФ_БИЛЕТЫDataTable dataTable = new DataSet1.ПРОФ_БИЛЕТЫDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ПРОФ_БИЛЕТЫDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ПРОФ_БИЛЕТЫ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_ПРОФ_БИЛЕТА, global::System.Nullable<decimal> Original_НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ПРОФ_БИЛЕТА));
            if ((Original_НОМЕР_БИЛЕТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((decimal)(Original_НОМЕР_БИЛЕТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((Original_КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((System.DateTime)(Original_КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_ПРОФ_БИЛЕТА, global::System.Nullable<decimal> НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_ПРОФ_БИЛЕТА));
            if ((НОМЕР_БИЛЕТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[1].Value = ((decimal)(НОМЕР_БИЛЕТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((System.DateTime)(КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_ПРОФ_БИЛЕТА, global::System.Nullable<decimal> НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН, decimal Original_ID_ПРОФ_БИЛЕТА, global::System.Nullable<decimal> Original_НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_ПРОФ_БИЛЕТА));
            if ((НОМЕР_БИЛЕТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((decimal)(НОМЕР_БИЛЕТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((System.DateTime)(КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_ID_ПРОФ_БИЛЕТА));
            if ((Original_НОМЕР_БИЛЕТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_НОМЕР_БИЛЕТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            if ((Original_КОГДА_ВЫДАН.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((System.DateTime)(Original_КОГДА_ВЫДАН.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(global::System.Nullable<decimal> НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> КОГДА_ВЫДАН, decimal Original_ID_ПРОФ_БИЛЕТА, global::System.Nullable<decimal> Original_НОМЕР_БИЛЕТА, global::System.Nullable<global::System.DateTime> Original_КОГДА_ВЫДАН) {
            return this.Update(Original_ID_ПРОФ_БИЛЕТА, НОМЕР_БИЛЕТА, КОГДА_ВЫДАН, Original_ID_ПРОФ_БИЛЕТА, Original_НОМЕР_БИЛЕТА, Original_КОГДА_ВЫДАН);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class РЕКВИЗИТЫ_БАНКАTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public РЕКВИЗИТЫ_БАНКАTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "РЕКВИЗИТЫ_БАНКА";
            tableMapping.ColumnMappings.Add("ID_РЕКВИЗ_БАНКА", "ID_РЕКВИЗ_БАНКА");
            tableMapping.ColumnMappings.Add("НАИМ_БАНКА", "НАИМ_БАНКА");
            tableMapping.ColumnMappings.Add("НОМ_ЛИЦ_СЧЁТА", "НОМ_ЛИЦ_СЧЁТА");
            tableMapping.ColumnMappings.Add("БИК", "БИК");
            tableMapping.ColumnMappings.Add("ГОДЕН_ДО", "ГОДЕН_ДО");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""РЕКВИЗИТЫ_БАНКА"" WHERE ((""ID_РЕКВИЗ_БАНКА"" = :Original_ID_РЕКВИЗ_БАНКА) AND ((:IsNull_НАИМ_БАНКА = 1 AND ""НАИМ_БАНКА"" IS NULL) OR (""НАИМ_БАНКА"" = :Original_НАИМ_БАНКА)) AND ((:IsNull_НОМ_ЛИЦ_СЧЁТА = 1 AND ""НОМ_ЛИЦ_СЧЁТА"" IS NULL) OR (""НОМ_ЛИЦ_СЧЁТА"" = :Original_НОМ_ЛИЦ_СЧЁТА)) AND ((:IsNull_БИК = 1 AND ""БИК"" IS NULL) OR (""БИК"" = :Original_БИК)) AND ((:IsNull_ГОДЕН_ДО = 1 AND ""ГОДЕН_ДО"" IS NULL) OR (""ГОДЕН_ДО"" = :Original_ГОДЕН_ДО)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_БАНКА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_БАНКА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_БИК";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_БИК";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"РЕКВИЗИТЫ_БАНКА\" (\"ID_РЕКВИЗ_БАНКА\", \"НАИМ_БАНКА\", \"НОМ_ЛИЦ_СЧЁ" +
                "ТА\", \"БИК\", \"ГОДЕН_ДО\") VALUES (:ID_РЕКВИЗ_БАНКА, :НАИМ_БАНКА, :НОМ_ЛИЦ_СЧЁТА, :" +
                "БИК, :ГОДЕН_ДО)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_БАНКА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "БИК";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""РЕКВИЗИТЫ_БАНКА"" SET ""ID_РЕКВИЗ_БАНКА"" = :ID_РЕКВИЗ_БАНКА, ""НАИМ_БАНКА"" = :НАИМ_БАНКА, ""НОМ_ЛИЦ_СЧЁТА"" = :НОМ_ЛИЦ_СЧЁТА, ""БИК"" = :БИК, ""ГОДЕН_ДО"" = :ГОДЕН_ДО WHERE ((""ID_РЕКВИЗ_БАНКА"" = :Original_ID_РЕКВИЗ_БАНКА) AND ((:IsNull_НАИМ_БАНКА = 1 AND ""НАИМ_БАНКА"" IS NULL) OR (""НАИМ_БАНКА"" = :Original_НАИМ_БАНКА)) AND ((:IsNull_НОМ_ЛИЦ_СЧЁТА = 1 AND ""НОМ_ЛИЦ_СЧЁТА"" IS NULL) OR (""НОМ_ЛИЦ_СЧЁТА"" = :Original_НОМ_ЛИЦ_СЧЁТА)) AND ((:IsNull_БИК = 1 AND ""БИК"" IS NULL) OR (""БИК"" = :Original_БИК)) AND ((:IsNull_ГОДЕН_ДО = 1 AND ""ГОДЕН_ДО"" IS NULL) OR (""ГОДЕН_ДО"" = :Original_ГОДЕН_ДО)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_БАНКА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "БИК";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_РЕКВИЗ_БАНКА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_РЕКВИЗ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_БАНКА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_БАНКА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_БАНКА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НОМ_ЛИЦ_СЧЁТА";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "НОМ_ЛИЦ_СЧЁТА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_БИК";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_БИК";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "БИК";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ГОДЕН_ДО";
            param.DbType = global::System.Data.DbType.Date;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Date;
            param.Size = 7;
            param.IsNullable = true;
            param.SourceColumn = "ГОДЕН_ДО";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_РЕКВИЗ_БАНКА, НАИМ_БАНКА, НОМ_ЛИЦ_СЧЁТА, БИК, ГОДЕН_ДО FROM OE.РЕКВИЗИТ" +
                "Ы_БАНКА";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.РЕКВИЗИТЫ_БАНКАDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.РЕКВИЗИТЫ_БАНКАDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.РЕКВИЗИТЫ_БАНКАDataTable dataTable = new DataSet1.РЕКВИЗИТЫ_БАНКАDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.РЕКВИЗИТЫ_БАНКАDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "РЕКВИЗИТЫ_БАНКА");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_РЕКВИЗ_БАНКА, string Original_НАИМ_БАНКА, global::System.Nullable<decimal> Original_НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> Original_БИК, global::System.Nullable<global::System.DateTime> Original_ГОДЕН_ДО) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_РЕКВИЗ_БАНКА));
            if ((Original_НАИМ_БАНКА == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМ_БАНКА));
            }
            if ((Original_НОМ_ЛИЦ_СЧЁТА.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((decimal)(Original_НОМ_ЛИЦ_СЧЁТА.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            if ((Original_БИК.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[6].Value = ((decimal)(Original_БИК.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[5].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[6].Value = global::System.DBNull.Value;
            }
            if ((Original_ГОДЕН_ДО.HasValue == true)) {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[8].Value = ((System.DateTime)(Original_ГОДЕН_ДО.Value));
            }
            else {
                this.Adapter.DeleteCommand.Parameters[7].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[8].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_РЕКВИЗ_БАНКА, string НАИМ_БАНКА, global::System.Nullable<decimal> НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> БИК, global::System.Nullable<global::System.DateTime> ГОДЕН_ДО) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_РЕКВИЗ_БАНКА));
            if ((НАИМ_БАНКА == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМ_БАНКА));
            }
            if ((НОМ_ЛИЦ_СЧЁТА.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[2].Value = ((decimal)(НОМ_ЛИЦ_СЧЁТА.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((БИК.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[3].Value = ((decimal)(БИК.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ГОДЕН_ДО.HasValue == true)) {
                this.Adapter.InsertCommand.Parameters[4].Value = ((System.DateTime)(ГОДЕН_ДО.Value));
            }
            else {
                this.Adapter.InsertCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_РЕКВИЗ_БАНКА, string НАИМ_БАНКА, global::System.Nullable<decimal> НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> БИК, global::System.Nullable<global::System.DateTime> ГОДЕН_ДО, decimal Original_ID_РЕКВИЗ_БАНКА, string Original_НАИМ_БАНКА, global::System.Nullable<decimal> Original_НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> Original_БИК, global::System.Nullable<global::System.DateTime> Original_ГОДЕН_ДО) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_РЕКВИЗ_БАНКА));
            if ((НАИМ_БАНКА == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМ_БАНКА));
            }
            if ((НОМ_ЛИЦ_СЧЁТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((decimal)(НОМ_ЛИЦ_СЧЁТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((БИК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(БИК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((ГОДЕН_ДО.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((System.DateTime)(ГОДЕН_ДО.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            this.Adapter.UpdateCommand.Parameters[5].Value = ((decimal)(Original_ID_РЕКВИЗ_БАНКА));
            if ((Original_НАИМ_БАНКА == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_НАИМ_БАНКА));
            }
            if ((Original_НОМ_ЛИЦ_СЧЁТА.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[9].Value = ((decimal)(Original_НОМ_ЛИЦ_СЧЁТА.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[8].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[9].Value = global::System.DBNull.Value;
            }
            if ((Original_БИК.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[11].Value = ((decimal)(Original_БИК.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[10].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[11].Value = global::System.DBNull.Value;
            }
            if ((Original_ГОДЕН_ДО.HasValue == true)) {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[13].Value = ((System.DateTime)(Original_ГОДЕН_ДО.Value));
            }
            else {
                this.Adapter.UpdateCommand.Parameters[12].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[13].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМ_БАНКА, global::System.Nullable<decimal> НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> БИК, global::System.Nullable<global::System.DateTime> ГОДЕН_ДО, decimal Original_ID_РЕКВИЗ_БАНКА, string Original_НАИМ_БАНКА, global::System.Nullable<decimal> Original_НОМ_ЛИЦ_СЧЁТА, global::System.Nullable<decimal> Original_БИК, global::System.Nullable<global::System.DateTime> Original_ГОДЕН_ДО) {
            return this.Update(Original_ID_РЕКВИЗ_БАНКА, НАИМ_БАНКА, НОМ_ЛИЦ_СЧЁТА, БИК, ГОДЕН_ДО, Original_ID_РЕКВИЗ_БАНКА, Original_НАИМ_БАНКА, Original_НОМ_ЛИЦ_СЧЁТА, Original_БИК, Original_ГОДЕН_ДО);
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ТИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter : global::System.ComponentModel.Component {
        
        private global::Oracle.ManagedDataAccess.Client.OracleDataAdapter _adapter;
        
        private global::Oracle.ManagedDataAccess.Client.OracleConnection _connection;
        
        private global::Oracle.ManagedDataAccess.Client.OracleTransaction _transaction;
        
        private global::Oracle.ManagedDataAccess.Client.OracleCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected internal global::Oracle.ManagedDataAccess.Client.OracleDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::Oracle.ManagedDataAccess.Client.OracleCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        internal global::Oracle.ManagedDataAccess.Client.OracleTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected global::Oracle.ManagedDataAccess.Client.OracleCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::Oracle.ManagedDataAccess.Client.OracleDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ";
            tableMapping.ColumnMappings.Add("ID_ТИПА_ПОЛЬЗ", "ID_ТИПА_ПОЛЬЗ");
            tableMapping.ColumnMappings.Add("НАИМ_ПОЛЬЗ", "НАИМ_ПОЛЬЗ");
            tableMapping.ColumnMappings.Add("КОД_ДОСТУПА", "КОД_ДОСТУПА");
            this._adapter.TableMappings.Add(tableMapping);
            this._adapter.DeleteCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.DeleteCommand.Connection = this.Connection;
            this._adapter.DeleteCommand.CommandText = @"DELETE FROM ""OE"".""ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"" WHERE ((""ID_ТИПА_ПОЛЬЗ"" = :Original_ID_ТИПА_ПОЛЬЗ) AND ((:IsNull_НАИМ_ПОЛЬЗ = 1 AND ""НАИМ_ПОЛЬЗ"" IS NULL) OR (""НАИМ_ПОЛЬЗ"" = :Original_НАИМ_ПОЛЬЗ)) AND ((:IsNull_КОД_ДОСТУПА = 1 AND ""КОД_ДОСТУПА"" IS NULL) OR (""КОД_ДОСТУПА"" = :Original_КОД_ДОСТУПА)))";
            this._adapter.DeleteCommand.CommandType = global::System.Data.CommandType.Text;
            global::Oracle.ManagedDataAccess.Client.OracleParameter param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ПОЛЬЗ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОД_ДОСТУПА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.DeleteCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОД_ДОСТУПА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.DeleteCommand.Parameters.Add(param);
            this._adapter.InsertCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.InsertCommand.Connection = this.Connection;
            this._adapter.InsertCommand.CommandText = "INSERT INTO \"OE\".\"ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ\" (\"ID_ТИПА_ПОЛЬЗ\", \"НАИМ_ПОЛЬЗ\", \"КОД_ДОСТУП" +
                "А\") VALUES (:ID_ТИПА_ПОЛЬЗ, :НАИМ_ПОЛЬЗ, :КОД_ДОСТУПА)";
            this._adapter.InsertCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ПОЛЬЗ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            this._adapter.InsertCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОД_ДОСТУПА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            this._adapter.InsertCommand.Parameters.Add(param);
            this._adapter.UpdateCommand = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._adapter.UpdateCommand.Connection = this.Connection;
            this._adapter.UpdateCommand.CommandText = @"UPDATE ""OE"".""ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ"" SET ""ID_ТИПА_ПОЛЬЗ"" = :ID_ТИПА_ПОЛЬЗ, ""НАИМ_ПОЛЬЗ"" = :НАИМ_ПОЛЬЗ, ""КОД_ДОСТУПА"" = :КОД_ДОСТУПА WHERE ((""ID_ТИПА_ПОЛЬЗ"" = :Original_ID_ТИПА_ПОЛЬЗ) AND ((:IsNull_НАИМ_ПОЛЬЗ = 1 AND ""НАИМ_ПОЛЬЗ"" IS NULL) OR (""НАИМ_ПОЛЬЗ"" = :Original_НАИМ_ПОЛЬЗ)) AND ((:IsNull_КОД_ДОСТУПА = 1 AND ""КОД_ДОСТУПА"" IS NULL) OR (""КОД_ДОСТУПА"" = :Original_КОД_ДОСТУПА)))";
            this._adapter.UpdateCommand.CommandType = global::System.Data.CommandType.Text;
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "НАИМ_ПОЛЬЗ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "КОД_ДОСТУПА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_ID_ТИПА_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Decimal;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Decimal;
            param.Size = 22;
            param.IsNullable = true;
            param.SourceColumn = "ID_ТИПА_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_НАИМ_ПОЛЬЗ";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_НАИМ_ПОЛЬЗ";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 35;
            param.IsNullable = true;
            param.SourceColumn = "НАИМ_ПОЛЬЗ";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "IsNull_КОД_ДОСТУПА";
            param.DbType = global::System.Data.DbType.Int32;
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Int32;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            param.SourceColumnNullMapping = true;
            this._adapter.UpdateCommand.Parameters.Add(param);
            param = new global::Oracle.ManagedDataAccess.Client.OracleParameter();
            param.ParameterName = "Original_КОД_ДОСТУПА";
            param.OracleDbTypeEx = global::Oracle.ManagedDataAccess.Client.OracleDbType.Varchar2;
            param.Size = 20;
            param.IsNullable = true;
            param.SourceColumn = "КОД_ДОСТУПА";
            param.SourceVersion = global::System.Data.DataRowVersion.Original;
            this._adapter.UpdateCommand.Parameters.Add(param);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitConnection() {
            this._connection = new global::Oracle.ManagedDataAccess.Client.OracleConnection();
            this._connection.ConnectionString = global::Курсовая_работа.Properties.Settings.Default.ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::Oracle.ManagedDataAccess.Client.OracleCommand[1];
            this._commandCollection[0] = new global::Oracle.ManagedDataAccess.Client.OracleCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "SELECT ID_ТИПА_ПОЛЬЗ, НАИМ_ПОЛЬЗ, КОД_ДОСТУПА FROM OE.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.Text;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            DataSet1.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable dataTable = new DataSet1.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙDataTable dataTable) {
            return this.Adapter.Update(dataTable);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(DataSet1 dataSet) {
            return this.Adapter.Update(dataSet, "ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ");
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow dataRow) {
            return this.Adapter.Update(new global::System.Data.DataRow[] {
                        dataRow});
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int Update(global::System.Data.DataRow[] dataRows) {
            return this.Adapter.Update(dataRows);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Delete, true)]
        public virtual int Delete(decimal Original_ID_ТИПА_ПОЛЬЗ, string Original_НАИМ_ПОЛЬЗ, string Original_КОД_ДОСТУПА) {
            this.Adapter.DeleteCommand.Parameters[0].Value = ((decimal)(Original_ID_ТИПА_ПОЛЬЗ));
            if ((Original_НАИМ_ПОЛЬЗ == null)) {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[1].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[2].Value = ((string)(Original_НАИМ_ПОЛЬЗ));
            }
            if ((Original_КОД_ДОСТУПА == null)) {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(1));
                this.Adapter.DeleteCommand.Parameters[4].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.DeleteCommand.Parameters[3].Value = ((object)(0));
                this.Adapter.DeleteCommand.Parameters[4].Value = ((string)(Original_КОД_ДОСТУПА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.DeleteCommand.Connection.State;
            if (((this.Adapter.DeleteCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.DeleteCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.DeleteCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.DeleteCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Insert, true)]
        public virtual int Insert(decimal ID_ТИПА_ПОЛЬЗ, string НАИМ_ПОЛЬЗ, string КОД_ДОСТУПА) {
            this.Adapter.InsertCommand.Parameters[0].Value = ((decimal)(ID_ТИПА_ПОЛЬЗ));
            if ((НАИМ_ПОЛЬЗ == null)) {
                this.Adapter.InsertCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[1].Value = ((string)(НАИМ_ПОЛЬЗ));
            }
            if ((КОД_ДОСТУПА == null)) {
                this.Adapter.InsertCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.InsertCommand.Parameters[2].Value = ((string)(КОД_ДОСТУПА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.InsertCommand.Connection.State;
            if (((this.Adapter.InsertCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.InsertCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.InsertCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.InsertCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(decimal ID_ТИПА_ПОЛЬЗ, string НАИМ_ПОЛЬЗ, string КОД_ДОСТУПА, decimal Original_ID_ТИПА_ПОЛЬЗ, string Original_НАИМ_ПОЛЬЗ, string Original_КОД_ДОСТУПА) {
            this.Adapter.UpdateCommand.Parameters[0].Value = ((decimal)(ID_ТИПА_ПОЛЬЗ));
            if ((НАИМ_ПОЛЬЗ == null)) {
                this.Adapter.UpdateCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[1].Value = ((string)(НАИМ_ПОЛЬЗ));
            }
            if ((КОД_ДОСТУПА == null)) {
                this.Adapter.UpdateCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[2].Value = ((string)(КОД_ДОСТУПА));
            }
            this.Adapter.UpdateCommand.Parameters[3].Value = ((decimal)(Original_ID_ТИПА_ПОЛЬЗ));
            if ((Original_НАИМ_ПОЛЬЗ == null)) {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[5].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[4].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[5].Value = ((string)(Original_НАИМ_ПОЛЬЗ));
            }
            if ((Original_КОД_ДОСТУПА == null)) {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(1));
                this.Adapter.UpdateCommand.Parameters[7].Value = global::System.DBNull.Value;
            }
            else {
                this.Adapter.UpdateCommand.Parameters[6].Value = ((object)(0));
                this.Adapter.UpdateCommand.Parameters[7].Value = ((string)(Original_КОД_ДОСТУПА));
            }
            global::System.Data.ConnectionState previousConnectionState = this.Adapter.UpdateCommand.Connection.State;
            if (((this.Adapter.UpdateCommand.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                this.Adapter.UpdateCommand.Connection.Open();
            }
            try {
                int returnValue = this.Adapter.UpdateCommand.ExecuteNonQuery();
                return returnValue;
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    this.Adapter.UpdateCommand.Connection.Close();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Update, true)]
        public virtual int Update(string НАИМ_ПОЛЬЗ, string КОД_ДОСТУПА, decimal Original_ID_ТИПА_ПОЛЬЗ, string Original_НАИМ_ПОЛЬЗ, string Original_КОД_ДОСТУПА) {
            return this.Update(Original_ID_ТИПА_ПОЛЬЗ, НАИМ_ПОЛЬЗ, КОД_ДОСТУПА, Original_ID_ТИПА_ПОЛЬЗ, Original_НАИМ_ПОЛЬЗ, Original_КОД_ДОСТУПА);
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private АДРЕСА_ДОКУМЕНТОВTableAdapter _аДРЕСА_ДОКУМЕНТОВTableAdapter;
        
        private ДОКУМЕНТЫTableAdapter _дОКУМЕНТЫTableAdapter;
        
        private КАТЕГОРИИTableAdapter _кАТЕГОРИИTableAdapter;
        
        private МАТПОМОЩЬTableAdapter _мАТПОМОЩЬTableAdapter;
        
        private ПАСПОРТАTableAdapter _пАСПОРТАTableAdapter;
        
        private ПОЛЬЗОВАТЕЛЬTableAdapter _пОЛЬЗОВАТЕЛЬTableAdapter;
        
        private ПРОФ_БИЛЕТЫTableAdapter _пРОФ_БИЛЕТЫTableAdapter;
        
        private РЕКВИЗИТЫ_БАНКАTableAdapter _рЕКВИЗИТЫ_БАНКАTableAdapter;
        
        private ТИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter _тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public АДРЕСА_ДОКУМЕНТОВTableAdapter АДРЕСА_ДОКУМЕНТОВTableAdapter {
            get {
                return this._аДРЕСА_ДОКУМЕНТОВTableAdapter;
            }
            set {
                this._аДРЕСА_ДОКУМЕНТОВTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ДОКУМЕНТЫTableAdapter ДОКУМЕНТЫTableAdapter {
            get {
                return this._дОКУМЕНТЫTableAdapter;
            }
            set {
                this._дОКУМЕНТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public КАТЕГОРИИTableAdapter КАТЕГОРИИTableAdapter {
            get {
                return this._кАТЕГОРИИTableAdapter;
            }
            set {
                this._кАТЕГОРИИTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public МАТПОМОЩЬTableAdapter МАТПОМОЩЬTableAdapter {
            get {
                return this._мАТПОМОЩЬTableAdapter;
            }
            set {
                this._мАТПОМОЩЬTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПАСПОРТАTableAdapter ПАСПОРТАTableAdapter {
            get {
                return this._пАСПОРТАTableAdapter;
            }
            set {
                this._пАСПОРТАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПОЛЬЗОВАТЕЛЬTableAdapter ПОЛЬЗОВАТЕЛЬTableAdapter {
            get {
                return this._пОЛЬЗОВАТЕЛЬTableAdapter;
            }
            set {
                this._пОЛЬЗОВАТЕЛЬTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ПРОФ_БИЛЕТЫTableAdapter ПРОФ_БИЛЕТЫTableAdapter {
            get {
                return this._пРОФ_БИЛЕТЫTableAdapter;
            }
            set {
                this._пРОФ_БИЛЕТЫTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public РЕКВИЗИТЫ_БАНКАTableAdapter РЕКВИЗИТЫ_БАНКАTableAdapter {
            get {
                return this._рЕКВИЗИТЫ_БАНКАTableAdapter;
            }
            set {
                this._рЕКВИЗИТЫ_БАНКАTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso" +
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3" +
            "a", "System.Drawing.Design.UITypeEditor")]
        public ТИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter ТИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter {
            get {
                return this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter;
            }
            set {
                this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                if (((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null) 
                            && (this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection != null))) {
                    return this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection;
                }
                if (((this._дОКУМЕНТЫTableAdapter != null) 
                            && (this._дОКУМЕНТЫTableAdapter.Connection != null))) {
                    return this._дОКУМЕНТЫTableAdapter.Connection;
                }
                if (((this._кАТЕГОРИИTableAdapter != null) 
                            && (this._кАТЕГОРИИTableAdapter.Connection != null))) {
                    return this._кАТЕГОРИИTableAdapter.Connection;
                }
                if (((this._мАТПОМОЩЬTableAdapter != null) 
                            && (this._мАТПОМОЩЬTableAdapter.Connection != null))) {
                    return this._мАТПОМОЩЬTableAdapter.Connection;
                }
                if (((this._пАСПОРТАTableAdapter != null) 
                            && (this._пАСПОРТАTableAdapter.Connection != null))) {
                    return this._пАСПОРТАTableAdapter.Connection;
                }
                if (((this._пОЛЬЗОВАТЕЛЬTableAdapter != null) 
                            && (this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection != null))) {
                    return this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection;
                }
                if (((this._пРОФ_БИЛЕТЫTableAdapter != null) 
                            && (this._пРОФ_БИЛЕТЫTableAdapter.Connection != null))) {
                    return this._пРОФ_БИЛЕТЫTableAdapter.Connection;
                }
                if (((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null) 
                            && (this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection != null))) {
                    return this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection;
                }
                if (((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null) 
                            && (this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection != null))) {
                    return this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._дОКУМЕНТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._кАТЕГОРИИTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._мАТПОМОЩЬTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пАСПОРТАTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                    count = (count + 1);
                }
                if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                    count = (count + 1);
                }
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._пАСПОРТАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПАСПОРТА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пАСПОРТАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПРОФ_БИЛЕТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пРОФ_БИЛЕТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.РЕКВИЗИТЫ_БАНКА.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._рЕКВИЗИТЫ_БАНКАTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.АДРЕСА_ДОКУМЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._кАТЕГОРИИTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.КАТЕГОРИИ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._кАТЕГОРИИTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ПОЛЬЗОВАТЕЛЬ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._пОЛЬЗОВАТЕЛЬTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._дОКУМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.ДОКУМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._дОКУМЕНТЫTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if ((this._мАТПОМОЩЬTableAdapter != null)) {
                global::System.Data.DataRow[] updatedRows = dataSet.МАТПОМОЩЬ.Select(null, null, global::System.Data.DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if (((updatedRows != null) 
                            && (0 < updatedRows.Length))) {
                    result = (result + this._мАТПОМОЩЬTableAdapter.Update(updatedRows));
                    allChangedRows.AddRange(updatedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            if ((this._пАСПОРТАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПАСПОРТА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пАСПОРТАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПРОФ_БИЛЕТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пРОФ_БИЛЕТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.РЕКВИЗИТЫ_БАНКА.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._рЕКВИЗИТЫ_БАНКАTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.АДРЕСА_ДОКУМЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._кАТЕГОРИИTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.КАТЕГОРИИ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._кАТЕГОРИИTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ПОЛЬЗОВАТЕЛЬ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._пОЛЬЗОВАТЕЛЬTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._дОКУМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.ДОКУМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._дОКУМЕНТЫTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            if ((this._мАТПОМОЩЬTableAdapter != null)) {
                global::System.Data.DataRow[] addedRows = dataSet.МАТПОМОЩЬ.Select(null, null, global::System.Data.DataViewRowState.Added);
                if (((addedRows != null) 
                            && (0 < addedRows.Length))) {
                    result = (result + this._мАТПОМОЩЬTableAdapter.Update(addedRows));
                    allAddedRows.AddRange(addedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            if ((this._мАТПОМОЩЬTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.МАТПОМОЩЬ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._мАТПОМОЩЬTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._дОКУМЕНТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ДОКУМЕНТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._дОКУМЕНТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПОЛЬЗОВАТЕЛЬ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пОЛЬЗОВАТЕЛЬTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._кАТЕГОРИИTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.КАТЕГОРИИ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._кАТЕГОРИИTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.АДРЕСА_ДОКУМЕНТОВ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ТИПЫ_ПОЛЬЗОВАТЕЛЕЙ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.РЕКВИЗИТЫ_БАНКА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._рЕКВИЗИТЫ_БАНКАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПРОФ_БИЛЕТЫ.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пРОФ_БИЛЕТЫTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            if ((this._пАСПОРТАTableAdapter != null)) {
                global::System.Data.DataRow[] deletedRows = dataSet.ПАСПОРТА.Select(null, null, global::System.Data.DataViewRowState.Deleted);
                if (((deletedRows != null) 
                            && (0 < deletedRows.Length))) {
                    result = (result + this._пАСПОРТАTableAdapter.Update(deletedRows));
                    allChangedRows.AddRange(deletedRows);
                }
            }
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            if (((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._дОКУМЕНТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._дОКУМЕНТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._кАТЕГОРИИTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._кАТЕГОРИИTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._мАТПОМОЩЬTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._мАТПОМОЩЬTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._пАСПОРТАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пАСПОРТАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._пОЛЬЗОВАТЕЛЬTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._пРОФ_БИЛЕТЫTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._пРОФ_БИЛЕТЫTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            if (((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null) 
                        && (this.MatchTableAdapterConnection(this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection) == false))) {
                throw new global::System.ArgumentException("Все адаптеры таблицы, управляемые диспетчером адаптера таблицы TableAdapterManage" +
                        "r, должны использовать одинаковую строку подключения.");
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager не содержит сведений о подключении. Укажите для каждого адапт" +
                        "ера таблицы TableAdapterManager допустимый экземпляр адаптера таблицы.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("Не удается начать транзакцию. Текущее соединение данных не поддерживает транзакци" +
                        "и или текущее состояние не позволяет начать транзакцию.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                    revertConnections.Add(this._аДРЕСА_ДОКУМЕНТОВTableAdapter, this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection);
                    this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Adapter);
                    }
                }
                if ((this._дОКУМЕНТЫTableAdapter != null)) {
                    revertConnections.Add(this._дОКУМЕНТЫTableAdapter, this._дОКУМЕНТЫTableAdapter.Connection);
                    this._дОКУМЕНТЫTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._дОКУМЕНТЫTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._дОКУМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._дОКУМЕНТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._дОКУМЕНТЫTableAdapter.Adapter);
                    }
                }
                if ((this._кАТЕГОРИИTableAdapter != null)) {
                    revertConnections.Add(this._кАТЕГОРИИTableAdapter, this._кАТЕГОРИИTableAdapter.Connection);
                    this._кАТЕГОРИИTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._кАТЕГОРИИTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._кАТЕГОРИИTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._кАТЕГОРИИTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._кАТЕГОРИИTableAdapter.Adapter);
                    }
                }
                if ((this._мАТПОМОЩЬTableAdapter != null)) {
                    revertConnections.Add(this._мАТПОМОЩЬTableAdapter, this._мАТПОМОЩЬTableAdapter.Connection);
                    this._мАТПОМОЩЬTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._мАТПОМОЩЬTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._мАТПОМОЩЬTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._мАТПОМОЩЬTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._мАТПОМОЩЬTableAdapter.Adapter);
                    }
                }
                if ((this._пАСПОРТАTableAdapter != null)) {
                    revertConnections.Add(this._пАСПОРТАTableAdapter, this._пАСПОРТАTableAdapter.Connection);
                    this._пАСПОРТАTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._пАСПОРТАTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._пАСПОРТАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пАСПОРТАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пАСПОРТАTableAdapter.Adapter);
                    }
                }
                if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                    revertConnections.Add(this._пОЛЬЗОВАТЕЛЬTableAdapter, this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection);
                    this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._пОЛЬЗОВАТЕЛЬTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._пОЛЬЗОВАТЕЛЬTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пОЛЬЗОВАТЕЛЬTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пОЛЬЗОВАТЕЛЬTableAdapter.Adapter);
                    }
                }
                if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                    revertConnections.Add(this._пРОФ_БИЛЕТЫTableAdapter, this._пРОФ_БИЛЕТЫTableAdapter.Connection);
                    this._пРОФ_БИЛЕТЫTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._пРОФ_БИЛЕТЫTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._пРОФ_БИЛЕТЫTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._пРОФ_БИЛЕТЫTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._пРОФ_БИЛЕТЫTableAdapter.Adapter);
                    }
                }
                if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                    revertConnections.Add(this._рЕКВИЗИТЫ_БАНКАTableAdapter, this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection);
                    this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._рЕКВИЗИТЫ_БАНКАTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._рЕКВИЗИТЫ_БАНКАTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._рЕКВИЗИТЫ_БАНКАTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._рЕКВИЗИТЫ_БАНКАTableAdapter.Adapter);
                    }
                }
                if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                    revertConnections.Add(this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter, this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection);
                    this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(workConnection));
                    this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Transaction = ((global::Oracle.ManagedDataAccess.Client.OracleTransaction)(workTransaction));
                    if (this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Adapter.AcceptChangesDuringUpdate) {
                        this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        adaptersWithAcceptChangesDuringUpdate.Add(this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Adapter);
                    }
                }
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((this._аДРЕСА_ДОКУМЕНТОВTableAdapter != null)) {
                    this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._аДРЕСА_ДОКУМЕНТОВTableAdapter]));
                    this._аДРЕСА_ДОКУМЕНТОВTableAdapter.Transaction = null;
                }
                if ((this._дОКУМЕНТЫTableAdapter != null)) {
                    this._дОКУМЕНТЫTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._дОКУМЕНТЫTableAdapter]));
                    this._дОКУМЕНТЫTableAdapter.Transaction = null;
                }
                if ((this._кАТЕГОРИИTableAdapter != null)) {
                    this._кАТЕГОРИИTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._кАТЕГОРИИTableAdapter]));
                    this._кАТЕГОРИИTableAdapter.Transaction = null;
                }
                if ((this._мАТПОМОЩЬTableAdapter != null)) {
                    this._мАТПОМОЩЬTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._мАТПОМОЩЬTableAdapter]));
                    this._мАТПОМОЩЬTableAdapter.Transaction = null;
                }
                if ((this._пАСПОРТАTableAdapter != null)) {
                    this._пАСПОРТАTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._пАСПОРТАTableAdapter]));
                    this._пАСПОРТАTableAdapter.Transaction = null;
                }
                if ((this._пОЛЬЗОВАТЕЛЬTableAdapter != null)) {
                    this._пОЛЬЗОВАТЕЛЬTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._пОЛЬЗОВАТЕЛЬTableAdapter]));
                    this._пОЛЬЗОВАТЕЛЬTableAdapter.Transaction = null;
                }
                if ((this._пРОФ_БИЛЕТЫTableAdapter != null)) {
                    this._пРОФ_БИЛЕТЫTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._пРОФ_БИЛЕТЫTableAdapter]));
                    this._пРОФ_БИЛЕТЫTableAdapter.Transaction = null;
                }
                if ((this._рЕКВИЗИТЫ_БАНКАTableAdapter != null)) {
                    this._рЕКВИЗИТЫ_БАНКАTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._рЕКВИЗИТЫ_БАНКАTableAdapter]));
                    this._рЕКВИЗИТЫ_БАНКАTableAdapter.Transaction = null;
                }
                if ((this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter != null)) {
                    this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Connection = ((global::Oracle.ManagedDataAccess.Client.OracleConnection)(revertConnections[this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter]));
                    this._тИПЫ_ПОЛЬЗОВАТЕЛЕЙTableAdapter.Transaction = null;
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "17.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591